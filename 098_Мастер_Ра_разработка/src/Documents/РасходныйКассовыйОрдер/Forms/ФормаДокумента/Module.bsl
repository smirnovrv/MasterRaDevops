// @strict-types


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Не ЗначениеЗаполнено(Объект.ДокументЗатраты) Тогда 
		Если ЗначениеЗаполнено(Объект.ДокументЗатраты.ДокументОплаты) Тогда 
			ДокументЗатраты = Объект.ДокументЗатраты.ПолучитьОбъект();
			ДокументЗатраты.ДокументОплаты = Объект.Ссылка;
			ДокументЗатраты.Записать();
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыЗаявкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Заказы.ТекущиеДанные;      
	ТекущиеДанные.кодЗаказа = ПолучитьНомерЗаказ(ТекущиеДанные.Заявка);
КонецПроцедуры

Функция ПолучитьНомерЗаказ(Заявка)
	  Возврат  Заявка.Номер;
КонецФункции	

&НаКлиенте
Процедура ЗаказыСуммаПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры

Процедура РассчитатьСумму()
	Объект.СуммаДокумента 	= Объект.Заказы.Итог("Сумма");
	Объект.СуммаПрихода 	= Объект.Поступления.Итог("Сумма");
КонецПроцедуры	

&НаКлиенте
Процедура ЗаказыСтатьяРасходовПриИзменении(Элемент)
	текСтрока = ЭтаФорма.Элементы.Заказы.ТекущиеДанные;
	КодМинор = ПолучитьКодМинор(текСтрока.СтатьяРасходов);
	Код      = ПолучитьКод(текСтрока.СтатьяРасходов);
	Если КодМинор=0 Тогда                     
		текСтрока.НомерСтатьиРасхода = Строка(Код);
	иначе	
		текСтрока.НомерСтатьиРасхода = Строка(Код)+"."+Строка(КодМинор);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьКодМинор(СтатьяРасходов)
	Возврат СтатьяРасходов.КодМинор;
КонецФункции

&НаСервере
Функция ПолучитьКод(СтатьяРасходов)
	Возврат СтатьяРасходов.Код;
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для Каждого стрЗаказы из Объект.Заказы Цикл
		Если ЗначениеЗаполнено(стрЗаказы.КодЗаказа) Тогда 
			 тКодЗаказа = стрЗаказы.КодЗаказа;
		 иначе
			тКодЗаказа = ПолучитьНомерЗаказ(стрЗаказы.Заявка); 
		КонецЕсли;	
		Если стрЗаказы.НомерСтроки=Объект.Заказы.Количество() Тогда 
			Объект.КодыЗаказов	= Объект.КодыЗаказов+" "+тКодЗаказа;
		ИначеЕсли стрЗаказы.НомерСтроки=1 Тогда   	
			Объект.КодыЗаказов	= тКодЗаказа+",";
		иначе
			Объект.КодыЗаказов	= Объект.КодыЗаказов+" "+тКодЗаказа+",";
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоступлениямиНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоступлениями(Команда)
	ЗаполнитьПоступлениямиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПоступленияПоступлениеПриИзменении(Элемент)
	ТекСтрока = Элементы.Поступления.ТекущиеДанные;
	ТекСтрока.Сумма = СуммаПоступления(ТекСтрока.Поступление);
	
	Объект.СуммаПрихода =  Объект.Поступления.Итог("Сумма");

КонецПроцедуры

&НаСервере
Функция СуммаПоступления(Поступление)   
	//290622
   // Если Поступление.НДС_В_томЧисле Тогда 
   //    СуммаДокумента =  Поступление.СуммаДокумента; 
   //Иначе 
   //   	СуммаДокумента = Поступление.СуммаДокумента - Поступление.Товары.Итог("СуммаНДС"); 
   // КонецЕсли;   
    СуммаДокумента =  Поступление.СуммаДокумента;
	
	Возврат СуммаДокумента;
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Статус) Тогда
		Если Объект.Статус = Перечисления.Статусы.Закрыт И Не РольДоступна("УУ") Тогда 
			ЭтаФорма.ТолькоПросмотр = Истина;
		иначе
			ЭтаФорма.ТолькоПросмотр = Ложь;
		КонецЕсли;	
	иначе	
		Объект.Статус 		= Перечисления.Статусы.Вработе;
		Модифицированность 	= Истина;
	КонецЕсли;
	
	Если Объект.Статус = Перечисления.Статусы.Закрыт Тогда 
		Если Объект.Закрыт = Ложь Тогда  
			Объект.Закрыт 		= Истина;
			Модифицированность 	= Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)  
	 ВывестиНомерСтатьи()	
КонецПроцедуры

&НаСервере
Процедура ВывестиНомерСтатьи()
	Если Объект.СтатьяРасходов.КодМинор=0 Тогда                     
		Объект.НомерСтатьиРасхода = Строка(Объект.СтатьяРасходов.Код);
	иначе	
		Объект.НомерСтатьиРасхода = Строка(Объект.СтатьяРасходов.Код)+"."+Строка(Объект.СтатьяРасходов.КодМинор);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПослеУдаления(Элемент)
	РассчитатьСумму();
КонецПроцедуры

&НаКлиенте
Процедура ПоступленияПослеУдаления(Элемент)
	РассчитатьСумму();
КонецПроцедуры
