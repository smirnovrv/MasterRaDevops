// @strict-types


Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ВидРабот = Перечисления.ВидыРабот.Сборка Тогда 
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ДатаИВремяДоставки"));
		ПроверяемыеРеквизиты.Добавить("ДатаИВремяСборки");
	ИначеЕсли ВидРабот = Перечисления.ВидыРабот.Монтаж Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ДатаИВремяДоставки"));
		ПроверяемыеРеквизиты.Добавить("ДатаИВремяМонтажа");
	КонецЕсли;	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если СоздатьНаряд Тогда //Перенесено 15.10.20 
		Если БезКонтроляПроизводства=Ложь Тогда //18.11.20
			Если Не ОбщегоНазначения.ЕстьНаряд(Номер) Тогда 	
				ДокНаряд = Документы.НарядНаПроизводство.СоздатьДокумент();
				ДокНаряд.ТехническоеЗадание	= Ссылка;
				ДокНаряд.Номер 	= Номер;
				ДокНаряд.Дата  	= ТекущаяДата();
				Если БезКонтроляПроизводства Тогда 
					ДокНаряд.Статус = Перечисления.Статусы.Закрыт;	
				иначе
					ДокНаряд.Статус = Перечисления.Статусы.Вработе;
				КонецЕсли;
				ДокНаряд.Записать(); 
				
				ЕстьНаряд 	= Истина;
				//Статус 		= Перечисления.Статусы.Закрыт; Временно из-за ишибки
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;

	Движения.ВзаиморасчетыПоЗаказам.Записывать 	= Истина;
	Движения.Заказы.Записывать 					= Истина;
	Движения.СтоимостиЗаказов.Записывать		= Истина;
	
	запись = Движения.Заказы.Добавить();
	ЗаполнитьЗначенияСвойств(запись,Ссылка);
	запись.Регистратор 		= Ссылка;
	запись.КодЗаказа    	= Номер;
	запись.ЮрЛицо			= Контрагент;
	запись.АдресДоставки 	= Адрес;
	запись.КонтактноеЛицо   = КонтактноеЛицо;
	
	Если ЕстьНаряд и БезКонтроляПроизводства=Ложь Тогда ///опр. по виду работ есть ли наряд!!
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НарядНаПроизводство.ДатаВыполненияНаряда
		|ИЗ
		|	Документ.НарядНаПроизводство КАК НарядНаПроизводство
		|ГДЕ
		|	НарядНаПроизводство.Номер = &Номер";
		
		Запрос.УстановитьПараметр("Номер", Номер);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			запись.ДатаВыполненияЗаказа = ВыборкаДетальныеЗаписи.ДатаВыполненияНаряда;
		КонецЦикла;		
	иначе	
		запись.ДатаВыполненияЗаказа = СрокИзготовленияЗаказа;
	КонецЕсли;	
	
	ТабДвижения = Стоимости.Выгрузить(); //14.02.20
	ТабДвижения.Свернуть("Работы","ЦенаДляКлиента");
	
	Для Каждого стрТЧ из ТабДвижения цикл
		Если стрТЧ.ЦенаДляКлиента>0 и ЗначениеЗаполнено(стрТЧ.Работы) Тогда  
			записьСтоимости = Движения.СтоимостиЗаказов.Добавить();
			записьСтоимости.КодЗаказа       = Номер;
			записьСтоимости.Состав			= стрТЧ.Работы;
			записьСтоимости.ЦенаДляКлиента 	= стрТЧ.ЦенаДляКлиента;
			записьСтоимости.Регистратор		= Ссылка;
		КонецЕсли;
	КонецЦикла;	
	
	Если Ссылка.ИтогоЗаВесьЗаказ>0 Тогда 
		записьВзаиморасчеты = Движения.ВзаиморасчетыПоЗаказам.Добавить();
		записьВзаиморасчеты.ВидДвижения = ВидДвиженияНакопления.Приход;
		записьВзаиморасчеты.Период      = Ссылка.Дата;
		записьВзаиморасчеты.Регистратор = Ссылка;
		записьВзаиморасчеты.Организация = Ссылка.Организация;
		записьВзаиморасчеты.Контрагент	= Ссылка.Контрагент;
		записьВзаиморасчеты.КодЗаказа 	= Ссылка.Номер;
		записьВзаиморасчеты.Сумма     	= Ссылка.ИтогоЗаВесьЗаказ;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Переделка Тогда 
		Если Не ЗначениеЗаполнено(ПричинаПеределки) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Поле = "ПричинаПеределки";   
			Сообщение.ПутьКДанным = "Объект";
			Сообщение.Текст = "Не заполнена причина переделки";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;		
КонецПроцедуры


