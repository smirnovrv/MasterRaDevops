// @strict-types


&НаКлиенте
Процедура ЗакрытаПриИзменении(Элемент)
	 УстановитьОтбор(Закрыта);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор(Закрыт)
	Если Закрыт Тогда 
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатусЗадачи");
		ЭлементОтбора.ПравоеЗначение = Перечисления.СтатусыЗадач.Закрыта;
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
		ЭлементОтбора.Использование = Истина;
	Иначе 
		Список.Отбор.Элементы.Очистить();
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Закрыта = Истина;
	
	ГруппировкаДанных = Список.КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ГруппировкаДанных.ИдентификаторПользовательскойНастройки = "ОсновнаяГруппировка";
	ГруппировкаДанных.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПоляГруппировки = ГруппировкаДанных.ПоляГруппировки;
	
	ЭлементГруппировкиДанных 				= ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ЭлементГруппировкиДанных.Поле 			= Новый ПолеКомпоновкиДанных("СтатусЗадачи");
	ЭлементГруппировкиДанных.Использование 	= Истина;

КонецПроцедуры


