// @strict-types


Функция ЗатратыНаКраску(ОбПлощадьИзрасхМат,ВидРабот,РегистраторПечатнаяМашина,НаДату) Экспорт
	Если НЕ ВидРабот = Перечисления.ВидыРабот.СобственнаяПечатьНестандартныйРазмер Тогда 
		ЗатратыНаКраску = 0;	
	иначе
		ЗатратыНаКраску = Окр(ОбПлощадьИзрасхМат
		*ПолучитьЗначениеПараметраКраски(Перечисления.Параметры.КоэффРасходаКраски,РегистраторПечатнаяМашина,НаДату)
		*ПолучитьЗначениеПараметра(Перечисления.Параметры.КоэффУчетаПолей,НаДату)
		*ПолучитьЗначениеПараметраКраски(Перечисления.Параметры.ЦенаЗаКраску,РегистраторПечатнаяМашина,НаДату),2); 
	КонецЕсли;
	
	Возврат ЗатратыНаКраску;
	
КонецФункции	

Функция ПолучитьЗначениеПараметра(Парам,НаДату)
	Значение = 0;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПараметровСрезПоследних.Значение
		|ИЗ
		|	РегистрСведений.НастройкиПараметров.СрезПоследних(&НаДату, Параметр = &Параметр) КАК НастройкиПараметровСрезПоследних";
	
	Запрос.УстановитьПараметр("Параметр", Парам);
	Запрос.УстановитьПараметр("НаДату", НаДату);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Значение =  ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	
	Возврат Значение;
	
КонецФункции

Функция ПолучитьЗначениеПараметраКраски(Парам,ПечМашина,НаДату)
	Значение = 0;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПараметровСрезПоследних.Значение
		|ИЗ
		|	РегистрСведений.НастройкиПараметров.СрезПоследних(&НаДату, Параметр = &Параметр И ПечатнаяМашина = &ПечМашина) КАК НастройкиПараметровСрезПоследних";
	
	Запрос.УстановитьПараметр("Параметр", Парам);
	Запрос.УстановитьПараметр("ПечМашина", ПечМашина);
	Запрос.УстановитьПараметр("НаДату", НаДату);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Значение =  ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	
	Возврат Значение;
	
КонецФункции

Функция ДЗП(ОбПлощадьИзображения,Постпечать,ТарифЦеха,БезКонтроляПроизводства) Экспорт
	Попытка 
		ДЗП =  (ОбПлощадьИзображения*ТарифЦеха)+Постпечать;
	Исключение
		ДЗП = Постпечать;
	КонецПопытки;
	Если БезКонтроляПроизводства Тогда 
		ДЗП = 0;
	КонецЕсли;	
	Возврат ДЗП;
КонецФункции	

Функция ВозвратАкта(ФормаОплатыКО,ДатаВозвратаАкта,Акт,РегистраторВидПродукции) Экспорт
	Если ЗначениеЗаполнено(ДатаВозвратаАкта) Тогда 
		Возврат	Строка(ДатаВозвратаАкта);
	иначеЕсли ФормаОплатыКО = Перечисления.ВидыПлатежейФакт.Нал И ЗначениеЗаполнено(Акт)=Ложь Тогда 
		Возврат "Нал";
	ИначеЕсли РегистраторВидПродукции.Цветопроба Тогда 
		Возврат "цветопроба";
	иначе		
		Возврат "";
	КонецЕсли;
КонецФункции

Функция МКВ(Количество,Ширина) Экспорт 
	Попытка
		КоличествоМКВ = Количество*Число(Ширина); 
	Исключение
		КоличествоМКВ = 0;
	КонецПопытки;	
	Возврат КоличествоМКВ;
КонецФункции

Функция ПериодНачисления(Маржа,КодЗаказа) Экспорт 	
	ПериодНачисления = 0;
	АктДата = "";
	//--Нужно определить 3 даты:
	//1 - Дата выполнения заказа
    //2 - Дата возврата акта
	//3 - Дата последней оплаты
	//Если это не НАЛ, светопроба
	//--и определить БОЛЬШУЮ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Заказы.ДатаВыполненияЗаказа,
		|	Заказы.ДатаВозвратаАкта,
		|	МАКСИМУМ(ВзаиморасчетыПоЗаказамОстаткиИОбороты.Регистратор.Дата) КАК ДатаОплаты,
		|	Заказы.Регистратор.ФормаОплаты КАК ФормаОплаты,
		|	Заказы.Акт
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыПоЗаказам.ОстаткиИОбороты(, , Регистратор, , КодЗаказа = &КодЗаказа) КАК ВзаиморасчетыПоЗаказамОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Заказы КАК Заказы
		|		ПО ВзаиморасчетыПоЗаказамОстаткиИОбороты.КодЗаказа = Заказы.КодЗаказа
		|ГДЕ
		|	ВзаиморасчетыПоЗаказамОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|
		|СГРУППИРОВАТЬ ПО
		|	Заказы.ДатаВыполненияЗаказа,
		|	Заказы.ДатаВозвратаАкта,
		|	Заказы.Регистратор.ФормаОплаты,
		|	Заказы.Акт";

    Запрос.УстановитьПараметр("КодЗаказа", КодЗаказа);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	макДата = Дата(1,1,1);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если (Маржа>0) или ВыборкаДетальныеЗаписи.ФормаОплаты <> Перечисления.ФормыОплат.Нал Тогда 			
			макДата = ВыборкаДетальныеЗаписи.ДатаОплаты;
			Если ВыборкаДетальныеЗаписи.ДатаВыполненияЗаказа>макДата Тогда 
				макДата = ВыборкаДетальныеЗаписи.ДатаВыполненияЗаказа;
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.ДатаВозвратаАкта>макДата Тогда 
				макДата = ВыборкаДетальныеЗаписи.ДатаВозвратаАкта;
			КонецЕсли;		
		иначе
			макДата = ВыборкаДетальныеЗаписи.ДатаВыполненияЗаказа;
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.ФормаОплаты = Перечисления.ФормыОплат.Нал И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Акт)=Ложь Тогда 
			АктДата = "Нал";
		КонецЕсли;
	КонецЦикла;
	
	Если макДата= Дата(1,1,1) Тогда
		ПериодНачисления = "";
	иначе	
		ПериодНачисления = Месяц(макДата);
	КонецЕсли;	
	
	Если Маржа<0 Тогда 	
		ЗапросНаряд = Новый Запрос;
		ЗапросНаряд.Текст = 
		"ВЫБРАТЬ
		|	НарядНаПроизводство.ДатаВыполненияЗаказа
		|ИЗ
		|	Документ.НарядНаПроизводство КАК НарядНаПроизводство
		|ГДЕ
		|	НарядНаПроизводство.Номер = &Номер";
		
		ЗапросНаряд.УстановитьПараметр("Номер", КодЗаказа);
		
		РезультатНаряд = ЗапросНаряд.Выполнить();
			
		ВыборкаНаряд = РезультатНаряд.Выбрать();
		
		Пока ВыборкаНаряд.Следующий() Цикл
			начМ = НачалоМесяца(ВыборкаНаряд.ДатаВыполненияЗаказа)+35999;
			ПериодНачисления = Месяц(ВыборкаНаряд.ДатаВыполненияЗаказа);
			Если  ВыборкаНаряд.ДатаВыполненияЗаказа<начМ Тогда 
				 ПериодНачисления=ПериодНачисления-1;
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;	
		
	Если Маржа>0 и АктДата="" Тогда 
		Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаВозвратаАкта) Тогда 
			ПериодНачисления = 0;
		КонецЕсли;
	КонецЕсли;
	
	//Сумма долга
	
	
	Возврат ПериодНачисления;
	
КонецФункции
