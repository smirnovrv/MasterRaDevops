// @strict-types


Функция Печатников() Экспорт
		
	спСотрудников = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Должность = &Должность";

	Запрос.УстановитьПараметр("Должность", Справочники.Должности.ОператорПечатногоОборудования);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		спСотрудников.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;	
	
	Возврат спСотрудников;
	
КонецФункции

Функция Техников() Экспорт
		
	спСотрудников = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Должность = &Должность";

	Запрос.УстановитьПараметр("Должность", Справочники.Должности.ТехникПостпечатнойОбработки);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		спСотрудников.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;	
	
	Возврат спСотрудников;
	
КонецФункции

Функция ВидовПродукции(ВидРабот) Экспорт
		
	спПродукции = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеВидаРаботыИПродукции.ВидПродукции КАК ВидПродукции
		|ИЗ
		|	РегистрСведений.СоответствиеВидаРаботыИПродукции КАК СоответствиеВидаРаботыИПродукции
		|ГДЕ
		|	СоответствиеВидаРаботыИПродукции.ВидРабот = &ВидРабот";

	Запрос.УстановитьПараметр("ВидРабот", ВидРабот);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		спПродукции.Добавить(ВыборкаДетальныеЗаписи.ВидПродукции);
	КонецЦикла;	
	
	Возврат спПродукции;
	
КонецФункции

Функция ВидовСтоимости(ВидРабот) Экспорт
		
	спСтоимости= Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеПродукцииИСтоимости.Стоимость КАК Стоимость
		|ИЗ
		|	РегистрСведений.СоответствиеПродукцииИСтоимости КАК СоответствиеПродукцииИСтоимости
		|ГДЕ
		|	СоответствиеПродукцииИСтоимости.ВидРабот = &ВидРабот";

	Запрос.УстановитьПараметр("ВидРабот", ВидРабот);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		спСтоимости.Добавить(ВыборкаДетальныеЗаписи.Стоимость);
	КонецЦикла;	
	
	Возврат спСтоимости;
	
КонецФункции

Функция ОтвественныхЛиц(Организация,ОтветственноеЛицо,наДату) Экспорт 
	
	Структура = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтвественныеЛицаСрезПоследних.ФизическоеЛицо,
		|	ОтвественныеЛицаСрезПоследних.Должность.Наименование КАК Должность
		|ИЗ
		|	РегистрСведений.ОтвественныеЛица.СрезПоследних(
		|			&НаДату,
		|			Организация = &Организация
		|				И ОтветственноеЛицо = &ОтветственноеЛицо) КАК ОтвественныеЛицаСрезПоследних";

	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтветственноеЛицо", ОтветственноеЛицо);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Структура.Вставить("ФизическоеЛицо",ВыборкаДетальныеЗаписи.ФизическоеЛицо);
		Структура.Вставить("Должность",ВыборкаДетальныеЗаписи.Должность);
	КонецЦикла;
	 
	Возврат Структура;
	 
КонецФункции

Функция АдресовДоставкиПоБренду(Бренд) Экспорт
		
	спАдресов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Адрес КАК Адрес
		|ИЗ
		|	Справочник.Контрагенты.Бренды КАК КонтрагентыБренды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтрагентыДоставка.Адрес КАК Адрес,
		|			КонтрагентыДоставка.Ссылка КАК Контрагент
		|		ИЗ
		|			Справочник.Контрагенты.Доставка КАК КонтрагентыДоставка) КАК ВложенныйЗапрос
		|		ПО КонтрагентыБренды.Ссылка = ВложенныйЗапрос.Контрагент
		|ГДЕ
		|	КонтрагентыБренды.Бренд = &Бренд";

	Запрос.УстановитьПараметр("Бренд", Бренд);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		спАдресов.Добавить(ВыборкаДетальныеЗаписи.Адрес);
	КонецЦикла;	
	
	Возврат спАдресов;
	
КонецФункции

Функция АдресовДоставкиПоКонтрагенту(Контрагент) Экспорт
		
	спАдресов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрагентыДоставка.Адрес КАК Адрес
		|ИЗ
		|	Справочник.Контрагенты.Доставка КАК КонтрагентыДоставка
		|ГДЕ
		|	КонтрагентыДоставка.Ссылка = &Контрагент";

	Запрос.УстановитьПараметр("Контрагент", Контрагент);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		спАдресов.Добавить(ВыборкаДетальныеЗаписи.Адрес);
	КонецЦикла;	
	
	Возврат спАдресов;
	
КонецФункции

Функция КонтрагентовПоБренду(Бренд) Экспорт 
	
	СпКонтрагентов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	 "ВЫБРАТЬ
	 |	БрендыКонтрагентов.Контрагент
	 |ИЗ
	 |	РегистрСведений.БрендыКонтрагентов КАК БрендыКонтрагентов
	 |ГДЕ
	 |	БрендыКонтрагентов.Бренд = &Бренд";
	 
	 Запрос.УстановитьПараметр("Бренд",Бренд);
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 
	 Пока Выборка.Следующий() цикл
		 СпКонтрагентов.Добавить(Выборка.Контрагент);
	 КонецЦикла;	 
	 
	 Возврат СпКонтрагентов;
	 
КонецФункции
