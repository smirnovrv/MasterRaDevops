// @strict-types


Процедура ВыполнитьДвиженияРулоны(Наряд) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НарядНаПроизводствоРасходМатериала.НомерРулона КАК НомерРулона,
	|	НарядНаПроизводствоРасходМатериала.МатериалОсновы КАК МатериалОсновы,
	|	НарядНаПроизводствоРасходМатериала.РасходМатериала КАК РасходМатериала,
	|	НарядНаПроизводствоРасходМатериала.Ссылка КАК Регистратор,
	|	табРулоны.Материал КАК Материал
	|ИЗ
	|	Документ.НарядНаПроизводство.РасходМатериала КАК НарядНаПроизводствоРасходМатериала
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Рулоны.Рулон КАК Рулон,
	|			Рулоны.Материал КАК Материал
	|		ИЗ
	|			РегистрНакопления.Рулоны КАК Рулоны) КАК табРулоны
	|		ПО НарядНаПроизводствоРасходМатериала.НомерРулона = табРулоны.Рулон
	|ГДЕ
	|	НарядНаПроизводствоРасходМатериала.Ссылка В(&спНарядов)
	|	И НЕ НарядНаПроизводствоРасходМатериала.НомерРулона = """"";
	
	Если Наряд.Связан Тогда 
		Запрос.УстановитьПараметр("спНарядов", Наряд.СвязанныеНаряды.Выгрузить(,"Наряд"));
	Иначе 
		спНарядов =  Новый СписокЗначений;
		спНарядов.Добавить(Наряд);
		Запрос.УстановитьПараметр("спНарядов", спНарядов);
	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
		
	НаборЗаписей = РегистрыНакопления.Рулоны.СоздатьНаборЗаписей();

	ВыборкаПоРегистратору = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаПоРегистратору.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		Пока ВыборкаПоРегистратору.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			Запись.Период 			= ВыборкаПоРегистратору.Регистратор.дата;
			Запись.ВидДвижения 		= ВидДвиженияНакопления.Расход;
			Запись.Количество  		= ВыборкаПоРегистратору.РасходМатериала;
			Запись.МатериалОсновы	= ВыборкаПоРегистратору.МатериалОсновы; 
			Запись.Материал         = ВыборкаПоРегистратору.Материал;
			Запись.Регистратор 		= ВыборкаПоРегистратору.Регистратор;
			Запись.Рулон       		= ВыборкаПоРегистратору.НомерРулона;		
		КонецЦикла;
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
	КонецЦикла;
		
КонецПроцедуры	

Процедура ВыполнитьДвиженияМатериалы(Наряд) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НарядНаПроизводствоРасходМатериала.МатериалОсновы КАК МатериалОсновы,
	|	НарядНаПроизводствоРасходМатериала.РасходМатериала КАК РасходМатериала,
	|	НарядНаПроизводствоРасходМатериала.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.НарядНаПроизводство.РасходМатериала КАК НарядНаПроизводствоРасходМатериала
	|ГДЕ
	|	НарядНаПроизводствоРасходМатериала.Ссылка В(&спНарядов)
	|	И НарядНаПроизводствоРасходМатериала.НомерРулона = """"";
	
	Если Наряд.Связан Тогда 
		Запрос.УстановитьПараметр("спНарядов", Наряд.СвязанныеНаряды.Выгрузить(,"Наряд"));
	Иначе 
		спНарядов =  Новый СписокЗначений;
		спНарядов.Добавить(Наряд);
		Запрос.УстановитьПараметр("спНарядов", спНарядов);
	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
		
	НаборЗаписей = РегистрыНакопления.Материалы.СоздатьНаборЗаписей();

	ВыборкаПоРегистратору = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаПоРегистратору.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		Пока ВыборкаПоРегистратору.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			Запись.Период 			= ВыборкаПоРегистратору.Регистратор.дата;
			Запись.ВидДвижения 		= ВидДвиженияНакопления.Расход;
			Запись.Количество  		= ВыборкаПоРегистратору.РасходМатериала;
			Запись.МатериалОсновы	= ВыборкаПоРегистратору.МатериалОсновы; 
			//Запись.Материал         = ВыборкаПоРегистратору.Материал;
			Запись.Регистратор 		= ВыборкаПоРегистратору.Регистратор;		
		КонецЦикла;
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
	КонецЦикла;
		
КонецПроцедуры	

Процедура ВыполнитьДвиженияНаряды(Ссылка) Экспорт 
	
КонецПроцедуры
