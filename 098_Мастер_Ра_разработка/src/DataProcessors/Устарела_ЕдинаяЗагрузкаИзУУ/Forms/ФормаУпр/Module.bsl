Перем префикс;

&НаСервере
Функция ПоискКонтрагентаПоИНН(ИНН)
	  Возврат  Справочники.Контрагенты.НайтиПоРеквизиту("ИНН",ИНН);
КонецФункции

&НаСервере
Функция ПоискБанковскогоСчетаПоНомеру(НомерСчета,Владелец)

	БанковскийСчет = Справочники.БанковскиеСчета.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Владелец
		|	И БанковскиеСчета.НомерСчета = &НомерСчета";

	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("НомерСчета", НомерСчета);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		БанковскийСчет = ВыборкаДетальныеЗаписи.Ссылка;	
	КонецЦикла;
	
	  Возврат   БанковскийСчет;
	  
КонецФункции

&НаСервере
Функция ПоискКонтрагентаПоНаименованию(Наименование)
	  Возврат  Справочники.Контрагенты.НайтиПоНаименованию(Наименование);
КонецФункции
  
  &НаСервере
Функция ПоискДоговораПоНаименованию(Наименование,Контрагент)
	  Возврат  Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(Наименование,,,Контрагент);
КонецФункции

&НаСервере
Функция ПоискСчетаПоНомеру(Номер,ДатаДок)
	  Возврат  Документы.СчетНаОплатуПокупателю.НайтиПоНомеру(Номер,ДатаДок);
КонецФункции

&НаСервере
Функция ПоискРеализацииПоНомеру(Номер,ДатаДок)
	  Возврат  Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Номер,ДатаДок);
КонецФункции

&НаСервере
Функция ПоискПоступленияПоСсылке(Ссылка)
	  Возврат  Документы.ПоступлениеТоваровУслуг.ПолучитьСсылку(Новый УникальныйИдентификатор(Ссылка));
КонецФункции

&НаСервере
Процедура СоздатьШапкуСчета(ПараметрыДок)
	
	новСчет = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
	Если ЗначениеЗаполнено(ПараметрыДок.Дата) Тогда 
		новСчет.Дата 					= НачалоДня(ПараметрыДок.Дата);
	Иначе 
		новСчет.Дата 					= ТекущаяДата();
	КонецЕсли;
	новСчет.Номер 					= ПараметрыДок.Номер;
	новСчет.Контрагент 				= ПараметрыДок.Контрагент;
	новСчет.ДоговорКонтрагента		= ПараметрыДок.Договор;
	новСчет.ВалютаДокумента 		= Константы.ВалютаРегламентированногоУчета.Получить();
	новСчет.КратностьВзаиморасчетов =1;
	новСчет.КурсВзаиморасчетов 		=1;
	новСчет.Организация 			= Организация;
	новСчет.СуммаВключаетНДС    	= Истина;
	новСчет.Комментарий         	= ПараметрыДок.ТоварКодЗаказа;
	новСчет.ОрганизацияПолучатель 	= Организация;
	новСчет.СтруктурнаяЕдиница      = новСчет.ОрганизацияПолучатель.ОсновнойБанковскийСчет;	
	новСчет.Записать();
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьШапкуПоступления(ПараметрыДок)
	
	 ПоискПоступления 	= ПоискПоступленияПоСсылке(ПараметрыДок.Ссылка);
	 
	 Если ПоискПоступления.ПолучитьОбъект()=Неопределено Тогда 
		 новПост = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
		 Если ЗначениеЗаполнено(ПараметрыДок.Дата) Тогда 
			 новПост.Дата 					= НачалоДня(ПараметрыДок.Дата);
		 Иначе 
			 новПост.Дата 					= ТекущаяДата();
		 КонецЕсли;
		 новПост.Контрагент 			= ПараметрыДок.Контрагент;
		 новПост.ДоговорКонтрагента		= ПараметрыДок.Договор;
		 новПост.ВалютаДокумента 		= Константы.ВалютаРегламентированногоУчета.Получить();
		 новПост.КратностьВзаиморасчетов= 1;
		 новПост.КурсВзаиморасчетов 	= 1;
		 новПост.Организация 			= Организация;
		 новПост.СуммаВключаетНДС    	= ПараметрыДок.НДСвТомЧисле;
		 новПост.Комментарий         	= ПараметрыДок.Комментарий;
		 новПост.ДатаВходящегоДокумента  = ПараметрыДок.ДатаВходящегоДокумента;
		 новПост.ВидОперации             = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
		 новПост.Грузоотправитель        = ПараметрыДок.Грузоотправитель;
		 новПост.Грузополучатель         = ПараметрыДок.Грузополучатель;
		 новПост.НомерВходящегоДокумента = ПараметрыДок.НомерВходящегоДокумента;
		 новПост.Склад                   = Склад;
		 новПост.НДСВключенВСтоимость    = Истина;
		 новПост.СпособЗачетаАвансов     = Перечисления.СпособыЗачетаАвансов.Автоматически;
		 новПост.СчетУчетаРасчетовПоАвансам 		= ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.02");
		 новПост.СчетУчетаРасчетовСКонтрагентом 	= ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.01");
		 
		 новПост.УстановитьСсылкуНового(ПоискПоступления);
		 
		 Попытка
			 новПост.Записать(РежимЗаписиДокумента.Проведение);
		 Исключение
			  новПост.Записать();
		 КонецПопытки;
	 КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура СоздатьШапкуРеализации(ПараметрыДок)
	
	новРеализация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	Если ЗначениеЗаполнено(ПараметрыДок.Дата) Тогда 
		новРеализация.Дата 						= НачалоДня(ПараметрыДок.Дата);
	Иначе 
		новРеализация.Дата 						= ТекущаяДата();
	КонецЕсли;
	новРеализация.Номер 						= ПараметрыДок.Номер;
	новРеализация.Контрагент 					= ПараметрыДок.Контрагент;
	новРеализация.ДоговорКонтрагента			= ПараметрыДок.Договор;
	новРеализация.ВалютаДокумента 				= Константы.ВалютаРегламентированногоУчета.Получить();
	новРеализация.КратностьВзаиморасчетов 		=1;
	новРеализация.КурсВзаиморасчетов 			=1;
	новРеализация.Организация 					= Организация;
	новРеализация.СуммаВключаетНДС   			= ПараметрыДок.НДСвТомЧисле;
	новРеализация.БанковскийСчетОрганизации 	= новРеализация.Организация.ОсновнойБанковскийСчет;
	новРеализация.ВидОперации               	= Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
	новРеализация.СпособЗачетаАвансов      		= Перечисления.СпособыЗачетаАвансов.Автоматически;
	новРеализация.Склад                     	= Склад;
	новРеализация.СчетНаОплатуПокупателю    	= ПараметрыДок.Счет;  
	новРеализация.СчетУчетаРасчетовПоАвансам	= ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");
	новРеализация.СчетУчетаРасчетовСКонтрагентом= ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");
	Если новРеализация.ДоговорКонтрагента.ПометкаУдаления Тогда 
		договорОбъект =  новРеализация.ДоговорКонтрагента.ПолучитьОбъект();
		договорОбъект.ПометкаУдаления = Ложь;
		договорОбъект.Записать();
		Сообщить(договорОбъект.Наименование+"/"+договорОбъект.Владелец.Наименование+"снят с пометки на удаление");
	КонецЕсли;
	
	Попытка
		новРеализация.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		новРеализация.Записать();
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция СоздатьКонтрагента(ПараметрыКон)
	
	новКонтрагент 					= Справочники.Контрагенты.СоздатьЭлемент();
	новКонтрагент.ИНН 				= ПараметрыКон.ИНН;
	новКонтрагент.КПП 				= ПараметрыКон.КПП;
	новКонтрагент.Наименование 		= ПараметрыКон.Наименование;
	новКонтрагент.НаименованиеПолное= ПараметрыКон.НаименованиеПолное;
	Если СтрДлина(новКонтрагент.ИНН)>10 тогда
		новКонтрагент.ЮридическоеФизическоеЛицо	= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	иначе
		новКонтрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	КонецЕсли;
	новКонтрагент.Записать();
	Контрагент = новКонтрагент.Ссылка;
	
	Возврат Контрагент;
	
КонецФункции

&НаСервере
Функция СоздатьДоговор(Наименование,Владелец,Вид)
	
	ДоговорОбъект = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
	Если Наименование=Неопределено Тогда 
		ДоговорОбъект.Наименование          = "Основной договор";
	иначе
		ДоговорОбъект.Наименование          = Наименование;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ДоговорОбъект.ВалютаВзаиморасчетов) Тогда
		ДоговорОбъект.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
	ОрганизацияДоговора = Организация;
	ДоговорОбъект.Организация  = ОрганизацияДоговора;
	
	ДоговорОбъект.Владелец    = Владелец;
	Если Вид="СПокупателем" тогда
		ДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	ИначеЕсли Вид="СПоставщиком" тогда
	     ДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
	КонецЕсли;
	
	ДоговорОбъект.Записать();
	
	Возврат ДоговорОбъект.Ссылка;
	
КонецФункции

&НаСервере
Функция СоздатьБанковскийСчет(ПараметрыБС)
	
	владелец = ПараметрыБС.владелец;
	
	НовыйСчет = Справочники.БанковскиеСчета.СоздатьЭлемент();
	НовыйСчет.НомерСчета      = ПараметрыБС.НомерРС;
	НовыйСчет.Владелец        = ПараметрыБС.владелец;
	НовыйСчет.ВидСчета        = "Расчетный";
	НовыйСчет.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета.Получить();
	
	НайденныйБанк = Справочники.Банки.НайтиПоКоду(ПараметрыБС.БИК);
	НовыйСчет.Банк            = НайденныйБанк.Ссылка;
	НовыйСчет.Наименование    = ПараметрыБС.НаименованиеРС;
	НовыйСчет.Записать();
	 
	Если Не ЗначениеЗаполнено(владелец.ОсновнойБанковскийСчет) Тогда
		ОбъектВладелец = владелец.получитьОбъект();
		ОбъектВладелец.ОсновнойБанковскийСчет =НовыйСчет.Ссылка;	
		ОбъектВладелец.записать();
	КонецЕсли;
		
	Возврат НовыйСчет.Ссылка;
	
КонецФункции

&НаСервере
Функция СоздатьНоменклатуру(ПараметрыСтроки)
	Попытка
		ГУИД = Новый УникальныйИдентификатор(ПараметрыСтроки);	
		НоваяСсылка = Справочники.Номенклатура.ПолучитьСсылку(ГУИД);
	Исключение
	КонецПопытки;
	новЭлемент 	= Справочники.Номенклатура.СоздатьЭлемент();
	
	Если Не НоваяСсылка=Неопределено Тогда 
		новЭлемент.УстановитьСсылкуНового(НоваяСсылка);
	КонецЕсли;
	новЭлемент.ЕдиницаИзмерения 		= Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт");
	Попытка
		новЭлемент.Наименование				= ПараметрыСтроки.НоменклатураИмя;
		новЭлемент.НаименованиеПолное 		= ПараметрыСтроки.НоменклатураИмя;
	Исключение
		новЭлемент.Наименование				= ПараметрыСтроки;
		новЭлемент.НаименованиеПолное 		= ПараметрыСтроки;
	КонецПопытки;
	новЭлемент.Записать();
	
	Возврат новЭлемент.Ссылка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтрокуСчета(ПараметрыСтроки)
	Счет =  ПараметрыСтроки.Счет.ПолучитьОбъект();
	Если Счет.товары.Количество()=0 Тогда 
		новСтрока = Счет.Товары.Добавить();
		поискНомен= Справочники.Номенклатура.НайтиПоНаименованию(ПараметрыСтроки.Номенклатура);
		Если поискНомен.Пустая() Тогда 
			поискНомен = СоздатьНоменклатуру(ПараметрыСтроки);
		КонецЕсли;	
		новСтрока.Номенклатура 	= поискНомен;
		новСтрока.Количество    = Число(ПараметрыСтроки.Количество);
		новСтрока.Цена          = Число(ПараметрыСтроки.Цена);
		новСтрока.Сумма         = Число(ПараметрыСтроки.Сумма);
		Если ПараметрыСтроки.НДС = "20%" Тогда 
			новСтрока.СуммаНДС    = Число(ПараметрыСтроки.СуммаНДС);
			новСтрока.СтавкаНДС   = Перечисления.СтавкиНДС.НДС20;
		иначе
			новСтрока.ставкаНДС     = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
		Счет.Записать();
	иначе	
		Попытка
			индекс =  Число(ПараметрыСтроки.НомерСтроки)-1;
			текСтрока = Счет.товары.получить(индекс);
		Исключение		
			новСтрока = Счет.Товары.Добавить();
			поискНомен= Справочники.Номенклатура.НайтиПоНаименованию(ПараметрыСтроки.Номенклатура);
			Если поискНомен.Пустая() Тогда 
				поискНомен = СоздатьНоменклатуру(ПараметрыСтроки.Номенклатура);
			КонецЕсли;	
			новСтрока.Номенклатура 	= поискНомен;
			новСтрока.Количество    = Число(ПараметрыСтроки.Количество);
			новСтрока.Цена          = Число(ПараметрыСтроки.Цена);
			новСтрока.Сумма         = Число(ПараметрыСтроки.Сумма);
			Если ПараметрыСтроки.НДС = "20%" Тогда 
				новСтрока.СуммаНДС    = Число(ПараметрыСтроки.СуммаНДС);
				новСтрока.СтавкаНДС   = Перечисления.СтавкиНДС.НДС20;
			иначе
				новСтрока.ставкаНДС     = Перечисления.СтавкиНДС.БезНДС;
			КонецЕсли;
			
			Счет.Записать();
		КонецПопытки;
	КонецЕсли;
КОнецПроцедуры	

&НаСервере
Процедура ЗаполнитьСтрокуРеализации(ПараметрыСтроки)
	Реализация =  ПараметрыСтроки.Реализация.ПолучитьОбъект();
	Если Реализация.товары.Количество()=0 Тогда 
		новСтрока = Реализация.Товары.Добавить();
		поискНомен= Справочники.Номенклатура.НайтиПоНаименованию(ПараметрыСтроки.Номенклатура);
		Если поискНомен.Пустая() Тогда 
			поискНомен = СоздатьНоменклатуру(ПараметрыСтроки.Номенклатура);
		КонецЕсли;	
		новСтрока.Номенклатура 	= поискНомен;
		новСтрока.Количество    = Число(ПараметрыСтроки.Количество);
		новСтрока.Цена          = Число(ПараметрыСтроки.Цена);
		новСтрока.Сумма         = Число(ПараметрыСтроки.Сумма);
		новСтрока.СуммаНДС     	= Число(ПараметрыСтроки.СуммаНДС);
		новСтрока.СчетДоходов   = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
		новСтрока.СчетРасходов  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
		новСтрока.СчетУчета     = ПланыСчетов.Хозрасчетный.НайтиПоКоду("43");	
		Если ПараметрыСтроки.НДС = "20%" Тогда 
			новСтрока.СуммаНДС    = Число(ПараметрыСтроки.СуммаНДС);
			новСтрока.СтавкаНДС   = Перечисления.СтавкиНДС.НДС20;
			новСтрока.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
		иначе
			новСтрока.ставкаНДС     = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
		Реализация.Записать();
	иначе	
		Попытка
			индекс =  Число(ПараметрыСтроки.НомерСтроки)-1;
			текСтрока = Реализация.товары.получить(индекс);
		Исключение		
			новСтрока = Реализация.Товары.Добавить();
			поискНомен= Справочники.Номенклатура.НайтиПоНаименованию(ПараметрыСтроки.Номенклатура);
			Если поискНомен.Пустая() Тогда 
				поискНомен = СоздатьНоменклатуру(ПараметрыСтроки.Номенклатура);
			КонецЕсли;	
			новСтрока.Номенклатура 	= поискНомен;
			новСтрока.Количество    = Число(ПараметрыСтроки.Количество);
			новСтрока.Цена          = Число(ПараметрыСтроки.Цена);
			новСтрока.Сумма         = Число(ПараметрыСтроки.Сумма);
			новСтрока.СчетДоходов   = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
			новСтрока.СчетРасходов  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
			новСтрока.СчетУчета     = ПланыСчетов.Хозрасчетный.НайтиПоКоду("43");
			Если ПараметрыСтроки.НДС = "20%" Тогда 
				новСтрока.СуммаНДС    = Число(ПараметрыСтроки.СуммаНДС);
				новСтрока.СтавкаНДС   = Перечисления.СтавкиНДС.НДС20;
				новСтрока.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
			иначе
				новСтрока.ставкаНДС     = Перечисления.СтавкиНДС.БезНДС;
			КонецЕсли;
			Реализация.Записать();
		КонецПопытки;
	КонецЕсли;
КОнецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуПоступления(ПараметрыСтроки)
	ПоискПоступления 	= ПоискПоступленияПоСсылке(ПараметрыСтроки.Ссылка);
	Поступление =  ПоискПоступления.ПолучитьОбъект();
	Если Поступление.товары.Количество()=0 Тогда 
		новСтрока = Поступление.Товары.Добавить();
		//поискНомен= Справочники.Номенклатура.НайтиПоНаименованию(ПараметрыСтроки.Номенклатура);
		поискНомен= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ПараметрыСтроки.Номенклатура));
		Если поискНомен.ПолучитьОбъект() = Неопределено Тогда 
			поискНомен = СоздатьНоменклатуру(ПараметрыСтроки);
		КонецЕсли;	
		новСтрока.Номенклатура 	= поискНомен;
		новСтрока.Количество    = Число(ПараметрыСтроки.Количество);
		новСтрока.Цена          = Число(ПараметрыСтроки.Цена);
		новСтрока.Сумма         = Число(ПараметрыСтроки.Сумма);
		новСтрока.СчетУчета     = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.01");
		новСтрока.СчетУчетаНДС  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.03");
		новСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
		новСтрока.СтавкаНДС     = XMLЗначение(Тип("ПеречислениеСсылка.СтавкиНДС"),ПараметрыСтроки.СтавкаНДС);
		новСтрока.Сумма         = Число(ПараметрыСтроки.Сумма);
		новСтрока.СуммаНДС 		= Число(ПараметрыСтроки.СуммаНДС);
		Поступление.Записать();
	иначе	
		Попытка
			индекс =  Число(ПараметрыСтроки.НомерСтроки)-1;
			текСтрока = Поступление.товары.получить(индекс);
		Исключение
		новСтрока = Поступление.Товары.Добавить();
		//поискНомен= Справочники.Номенклатура.НайтиПоНаименованию(ПараметрыСтроки.Номенклатура);
		поискНомен= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ПараметрыСтроки.Номенклатура));
		Если поискНомен.ПолучитьОбъект() = Неопределено Тогда 
			поискНомен = СоздатьНоменклатуру(ПараметрыСтроки);
		КонецЕсли;	
		новСтрока.Номенклатура 	= поискНомен;
		новСтрока.Количество    = Число(ПараметрыСтроки.Количество);
		новСтрока.Цена          = Число(ПараметрыСтроки.Цена);
		новСтрока.Сумма         = Число(ПараметрыСтроки.Сумма);
		новСтрока.СчетУчета     = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.01");
		новСтрока.СчетУчетаНДС  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.03");
		новСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
		новСтрока.СтавкаНДС     = XMLЗначение(Тип("ПеречислениеСсылка.СтавкиНДС"),ПараметрыСтроки.СтавкаНДС);
		новСтрока.Сумма         = Число(ПараметрыСтроки.Сумма);
		новСтрока.СуммаНДС 		= Число(ПараметрыСтроки.СуммаНДС);
		Поступление.Записать();	
		КонецПопытки;
	КонецЕсли;
	
КОнецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуМатериалов(ПараметрыСтроки)
	ДокОбъект =  Документы.ОтчетПроизводстваЗаСмену.НайтиПоНомеру(ПараметрыСтроки.Номер,ПараметрыСтроки.ТекДата).ПолучитьОбъект();
	поискНомен= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ПараметрыСтроки.НоменклатураДляБух));
	
	Если поискНомен.ПолучитьОбъект()=Неопределено Тогда 
		новНомен = Справочники.Номенклатура.СоздатьЭлемент();
		новНомен.Наименование		= ПараметрыСтроки.Номенклатура;
		новНомен.НаименованиеПолное = ПараметрыСтроки.Номенклатура;
		новНомен.УстановитьСсылкуНового(поискНомен);
		новНомен.ВидНоменклатуры  	= Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары");
		новНомен.ЕдиницаИзмерения 	= Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт.");
		//новНомен.СтавкаНДС         	= Перечисления.СтавкиНДС.НДС20; //в номвом релизе нет
		новНомен.Записать();
		поискНомен = новНомен.Ссылка;
	КонецЕсли;	
	
	НайтиСтрокуТЧ = ДокОбъект.Материалы.Найти(поискНомен);
	Если НайтиСтрокуТЧ = Неопределено Тогда 
		новСтрока = ДокОбъект.Материалы.Добавить();
		новСтрока.Номенклатура 	= поискНомен;
		новСтрока.Количество    = Число(ПараметрыСтроки.Расход);
		новСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
		новСтрока.СтатьяЗатрат  = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Материальные расходы");
		новСтрока.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию("Оказание рекламных услуг");
		новСтрока.Счет     		= ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.01");
		ДокОбъект.Записать();	
	КонецЕсли;
	
КОнецПроцедуры

&НаСервере
Функция НайтиОПЗС_ПоДате(ДатаДок)

	Номер = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПроизводстваЗаСмену.Номер
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену КАК ОтчетПроизводстваЗаСмену
		|ГДЕ
		|	ОтчетПроизводстваЗаСмену.Дата МЕЖДУ &НачДата И &КонДата";

	Запрос.УстановитьПараметр("КонДата", КонецДня(ДатаДок));
	Запрос.УстановитьПараметр("НачДата", НачалоДня(ДатаДок));

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Номер = ВыборкаДетальныеЗаписи.Номер;
	КонецЦикла;

	Возврат Номер;
	
КонецФункции

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		  Сообщение = новый СообщениеПользователю;
		  Сообщение.Поле = "Организация";
		  Сообщение.Текст = "Не заполнено поле";
		  Сообщение.Сообщить();
		  Возврат;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Склад) Тогда 
		Сообщение = новый СообщениеПользователю;
		Сообщение.Поле = "Склад";
		Сообщение.Текст = "Не заполнено поле";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	  
	ДокументХМЛ = новый ЧтениеXML;
	ДокументХМЛ.ОткрытьФайл(Объект.ИмяФайла);
	
	ДокументХМЛ.Прочитать();
	ДокументХДТО = ФабрикаXDTO.ПрочитатьXML(ДокументХМЛ);  
	
	СвойствоЭД = ДокументХДТО.Свойства().Получить("ЭлементыСчета");
	Если СвойствоЭД <> Неопределено Тогда
		для каждого стр из ДокументХДТО.ЭлементыСчета цикл	
			
			префикс 	= стр.ОрганизацияПрефикс;			
			Контрагент = Неопределено;
			
			Если Не стр.КонтрагентИНН="" Тогда  
				поискКонтрагент = ПоискКонтрагентаПоИНН(стр.КонтрагентИНН);
			иначе
				поискКонтрагент = ПоискКонтрагентаПоНаименованию(стр.Контрагент);				
			КонецЕсли;
			
			Если поискКонтрагент.Пустая() Тогда
				параметрыКонт = новый Структура;
				параметрыКонт.Вставить("Наименование",СокрЛП(стр.Контрагент));
				параметрыКонт.Вставить("НаименованиеПолное",СокрЛП(стр.КонтрагентПолное));
				параметрыКонт.Вставить("ИНН",СокрЛП(стр.КонтрагентИНН));
				параметрыКонт.Вставить("КПП",СокрЛП(стр.КонтрагентКПП));
				Контрагент = СоздатьКонтрагента(параметрыКонт);
			иначе
				Контрагент = поискКонтрагент;
			КонецЕсли;	
			
			поискДоговор = ПоискДоговораПоНаименованию(СокрЛП(стр.Договор),Контрагент);		
			Если поискКонтрагент.Пустая() Тогда
				Договор = СоздатьДоговор(стр.Договор,Контрагент,"СПокупателем");
			иначе
				Договор = поискДоговор;
			КонецЕсли;	
			
			Попытка
				БанковскийСчет = ПоискБанковскогоСчетаПоНомеру(стр.НомерРС,Контрагент);			
				Если БанковскийСчет.Пустая()Тогда 
					Если Не стр.НомерРС="" тогда
						параметрыРС = Новый Структура;
						параметрыРС.Вставить("НомерРС",СокрЛП(стр.НомерРС));
						параметрыРС.Вставить("БИК",СокрЛП(стр.БИК));
						параметрыРС.Вставить("НаименованиеРС",СокрЛП(стр.НаименованиеРС));
						параметрыРС.Вставить("владелец",Контрагент);
						БанковскийСчет = СоздатьБанковскийСчет(параметрыРС);
					КонецЕсли;
				КонецЕсли;	
			Исключение
			КонецПопытки;
					
			Префикс = стр.ОрганизацияПрефикс;

			буфНомер = СокрЛП(стр.Номер);			
			буфНомер = ПреобразоватьНомер(буфНомер,префикс);
	
			ТекДата = XMLЗначение(Тип("Дата"),стр.Дата);
			
			//Счет на оплату покупателю
			ПоискСчета 	= ПоискСчетаПоНомеру(буфНомер,ТекДата);
			Если ПоискСчета.Пустая() Тогда 
				параметрыДок = Новый Структура;
				параметрыДок.Вставить("Дата",ТекДата);
				параметрыДок.Вставить("Номер",буфНомер);
				параметрыДок.Вставить("Контрагент",Контрагент);
				параметрыДок.Вставить("Договор",Договор);
				параметрыДок.Вставить("ТоварКодЗаказа",стр.ТоварКодЗаказа);
				СоздатьШапкуСчета(параметрыДок);
				ПоискСчета 	= ПоискСчетаПоНомеру(буфНомер,ТекДата);		
			КонецЕсли; 
			
			параметрыСтроки = Новый Структура;
			параметрыСтроки.Вставить("Счет",ПоискСчета);
			параметрыСтроки.Вставить("НомерСтроки",Стр.ТоварНомерСтроки);
			параметрыСтроки.Вставить("Номенклатура",Стр.ТоварНоменклатура);
			параметрыСтроки.Вставить("КодЗаказа",Стр.ТоварКодЗаказа);
			параметрыСтроки.Вставить("Количество",Стр.ТоварКоличество);
			параметрыСтроки.Вставить("Цена",Стр.ТоварЦена);
			параметрыСтроки.Вставить("Сумма",Стр.ТоварСумма);
			параметрыСтроки.Вставить("СуммаНДС",Стр.ТоварСуммаНДС);
			параметрыСтроки.Вставить("НДС",Стр.ТоварНДС);
			
			ЗаполнитьСтрокуСчета(ПараметрыСтроки);		    	
		КонецЦикла;	
	КонецЕсли;
	
	СвойствоЭД = ДокументХДТО.Свойства().Получить("ЭлементыАкта");
	Если СвойствоЭД <> Неопределено Тогда
		для каждого стр из ДокументХДТО.ЭлементыАкта цикл
			Контрагент = Неопределено;	
			Если Не стр.КонтрагентАктаИНН="" Тогда  
				поискКонтрагент = ПоискКонтрагентаПоИНН(стр.КонтрагентАктаИНН);
			иначе
				поискКонтрагент = ПоискКонтрагентаПоНаименованию(стр.КонтрагентАкта);				
			КонецЕсли;
			
			Если поискКонтрагент.Пустая() Тогда
				параметрыКонт = новый Структура;
				параметрыКонт.Вставить("Наименование",СокрЛП(стр.КонтрагентАкта));
				параметрыКонт.Вставить("НаименованиеПолное",СокрЛП(стр.КонтрагентАкта));
				параметрыКонт.Вставить("ИНН",СокрЛП(стр.КонтрагентАктаИНН));
				параметрыКонт.Вставить("КПП",СокрЛП(стр.КонтрагентАктаКПП));
				Контрагент = СоздатьКонтрагента(параметрыКонт);
			иначе
				Контрагент = поискКонтрагент;
			КонецЕсли;	
			
			поискДоговор = ПоискДоговораПоНаименованию(СокрЛП(стр.ДоговорКонтрагентаАкта),Контрагент);		
			Если ЗначениеЗаполнено(поискДоговор) Тогда	
				Договор = поискДоговор;	
			иначе
				Договор = СоздатьДоговор(стр.ДоговорКонтрагентаАкта,Контрагент,"СПокупателем");
			КонецЕсли;	
			
			Попытка
				БанковскийСчет = ПоискБанковскогоСчетаПоНомеру(стр.НомерРСАкта,Контрагент);
				Если БанковскийСчет.Пустая()Тогда 
					Если Не стр.НомерРС="" тогда
						параметрыРС = Новый Структура;
						параметрыРС.Вставить("НомерРС",СокрЛП(стр.НомерРСАкта));
						параметрыРС.Вставить("БИК",СокрЛП(стр.БИКАкта));
						параметрыРС.Вставить("НаименованиеРС",СокрЛП(стр.НаименованиеРСАкта));
						параметрыРС.Вставить("владелец",Контрагент);
						БанковскийСчет = СоздатьБанковскийСчет(параметрыРС);
					КонецЕсли;
				КонецЕсли;
			Исключение
			КонецПопытки;
			
			ДатаАкта 	= XMLЗначение(Тип("Дата"),стр.ДатаАкта);
			буфНомерАкта= СокрЛП(стр.НомерАкта);
			буфНомерАкта = ПреобразоватьНомер(буфНомерАкта,префикс);
			
			буфНомер = СокрЛП(стр.Основание);
			буфНомер = ПреобразоватьНомер(буфНомер,префикс);
			
			ПоискСчета 		= ПоискСчетаПоНомеру(буфНомер,ДатаАкта);			  
			ПоискРеализации = ПоискРеализацииПоНомеру(буфНомерАкта,Дата(ДатаАкта));
			
			Если Не ЗначениеЗаполнено(ПоискРеализации) Тогда 
				
				параметрыДок = Новый Структура;
				параметрыДок.Вставить("Дата",ДатаАкта);
				параметрыДок.Вставить("Номер",буфНомерАкта);
				параметрыДок.Вставить("Контрагент",Контрагент);
				параметрыДок.Вставить("Договор",Договор);
				параметрыДок.Вставить("Счет",ПоискСчета);
				Если Стр.СуммаАкта=Стр.ВсегоАкта Тогда 
					параметрыДок.Вставить("НДСвТомЧисле",Истина);
				иначе
					параметрыДок.Вставить("НДСвТомЧисле",Ложь);
				КонецЕсли;	
				СоздатьШапкуРеализации(параметрыДок);
				ПоискРеализации = ПоискРеализацииПоНомеру(буфНомерАкта,Дата(ДатаАкта));	
			КонецЕсли; 
			
			параметрыСтроки = Новый Структура;
			параметрыСтроки.Вставить("Реализация",ПоискРеализации);
			параметрыСтроки.Вставить("НомерСтроки",Стр.НомерСтроки);
			параметрыСтроки.Вставить("Номенклатура",Стр.НоменклатураАкта);
			параметрыСтроки.Вставить("Количество",Стр.КоличествоАкта);
			параметрыСтроки.Вставить("Цена",Стр.ЦенаАкта);
			параметрыСтроки.Вставить("Сумма",Стр.СуммаАкта);
			параметрыСтроки.Вставить("СуммаНДС",Стр.СуммаНДСАкта);
			параметрыСтроки.Вставить("НДС",Стр.НДСАкта);
			
			ЗаполнитьСтрокуРеализации(ПараметрыСтроки);	
		КонецЦикла;
	КонецЕсли;
	
	СвойствоЭД = ДокументХДТО.Свойства().Получить("ЭлементПоступления");
	Если СвойствоЭД <> Неопределено Тогда
		для каждого стр из ДокументХДТО.ЭлементПоступления цикл		
			Контрагент = Неопределено;
			
			Если Не стр.КонтрагентИНН="" Тогда  
				поискКонтрагент = ПоискКонтрагентаПоИНН(стр.КонтрагентИНН);
			иначе
				поискКонтрагент = ПоискКонтрагентаПоНаименованию(стр.Контрагент);				
			КонецЕсли;
			
			Если поискКонтрагент.Пустая() Тогда
				параметрыКонт = новый Структура;
				параметрыКонт.Вставить("Наименование",СокрЛП(стр.Контрагент));
				параметрыКонт.Вставить("НаименованиеПолное",СокрЛП(стр.КонтрагентПолное));
				параметрыКонт.Вставить("ИНН",СокрЛП(стр.КонтрагентИНН));
				параметрыКонт.Вставить("КПП",СокрЛП(стр.КонтрагентКПП));
				Контрагент = СоздатьКонтрагента(параметрыКонт);
			иначе
				Контрагент = поискКонтрагент;
			КонецЕсли;	
			
			поискДоговор = ПоискДоговораПоНаименованию(СокрЛП(стр.Договор),Контрагент);		
			Если ЗначениеЗаполнено(поискДоговор) Тогда
				Договор = поискДоговор;
			иначе
				Договор = СоздатьДоговор(стр.Договор,Контрагент,"СПокупателем");
			КонецЕсли;	
			
			Попытка
				БанковскийСчет = ПоискБанковскогоСчетаПоНомеру(стр.НомерРС,Контрагент);			
				Если БанковскийСчет.Пустая()Тогда 
					Если Не стр.НомерРС="" тогда
						параметрыРС = Новый Структура;
						параметрыРС.Вставить("НомерРС",СокрЛП(стр.НомерРС));
						параметрыРС.Вставить("БИК",СокрЛП(стр.БИК));
						параметрыРС.Вставить("НаименованиеРС",СокрЛП(стр.НаименованиеРС));
						параметрыРС.Вставить("владелец",Контрагент);
						БанковскийСчет = СоздатьБанковскийСчет(параметрыРС);
					КонецЕсли;
				КонецЕсли;	
			Исключение
			КонецПопытки;
			
			//ТекДата 	= XMLЗначение(Тип("Дата"),стр.Дата);
			ТекДата 	= XMLЗначение(Тип("Дата"),стр.ДатаВходящегоДокумента);
			//Поступление товаров		
			параметрыДок = Новый Структура;
			параметрыДок.Вставить("Дата",ТекДата);
			параметрыДок.Вставить("Комментарий",стр.Комментарий);
			параметрыДок.Вставить("Контрагент",Контрагент);
			параметрыДок.Вставить("Договор",Договор);
			параметрыДок.Вставить("ДатаВходящегоДокумента",XMLЗначение(Тип("Дата"),стр.ДатаВходящегоДокумента));
			параметрыДок.Вставить("НомерВходящегоДокумента",стр.НомерВходящегоДокумента);
			параметрыДок.Вставить("Грузоотправитель",ПоискКонтрагентаПоИНН(стр.Грузоотправитель));
			параметрыДок.Вставить("Грузополучатель",ПоискКонтрагентаПоИНН(стр.Грузополучатель));
			параметрыДок.Вставить("Ссылка",стр.Ссылка);
			Если стр.Сумма=стр.Всего Тогда 
				параметрыДок.Вставить("НДСвТомЧисле",Истина);
			Иначе 
		        параметрыДок.Вставить("НДСвТомЧисле",Ложь);
			КонецЕсли;	
			СоздатьШапкуПоступления(параметрыДок);	
			
			параметрыСтроки = Новый Структура;
			параметрыСтроки.Вставить("Ссылка",стр.Ссылка);
			параметрыСтроки.Вставить("НомерСтроки",Стр.НомерСтроки);
			параметрыСтроки.Вставить("Номенклатура",стр.Номенклатура);
			параметрыСтроки.Вставить("НоменклатураИмя",стр.НоменклатураИмя);
			параметрыСтроки.Вставить("Количество",Стр.Количество);
			параметрыСтроки.Вставить("Цена",Стр.Цена);
			параметрыСтроки.Вставить("Сумма",Стр.Сумма);
			параметрыСтроки.Вставить("СуммаНДС",Стр.СуммаНДС);
			параметрыСтроки.Вставить("СтавкаНДС",Стр.СтавкаНДС);
			
			ЗаполнитьСтрокуПоступления(ПараметрыСтроки);			
			
		КонецЦикла;	
	КонецЕсли;
	
	//СчетФактура
	СвойствоЭД = ДокументХДТО.Свойства().Получить("ЭлементыСчетФактура");
	Если СвойствоЭД <> Неопределено Тогда
		для каждого стр из ДокументХДТО.ЭлементыСчетФактура цикл
			Структура = Новый Структура;
			Структура.Вставить("НомерСчФ",стр.НомерСчетФактура);
			Структура.Вставить("ДатаСчФ",XMLЗначение(Тип("Дата"),стр.ДатаСчетФактура));
			Структура.Вставить("ОснованиеДата",XMLЗначение(Тип("Дата"),стр.ДатаОснования));
			Структура.Вставить("ОснованиеНомер",стр.НомерОснования);
			Структура.Вставить("Префикс",Префикс);
			СоздатьДокументыСФ(Структура);
		КонецЦикла;
	КонецЕсли;
	
	ДокументХМЛ.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыборФайла(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайла(Элемент, ПроверятьСуществование=Ложь)
	
	ДиалогФыбораФайла								=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогФыбораФайла.Фильтр						=	"Файл данных (*.xml)|*.xml";
	ДиалогФыбораФайла.Заголовок						=	"Выберите файл";
	ДиалогФыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогФыбораФайла.Расширение					=	"xml";
	ДиалогФыбораФайла.ИндексФильтра					=	0;
	//ДиалогФыбораФайла.ПолноеИмяФайла				=	Элемент.Значение;
	ДиалогФыбораФайла.ПроверятьСуществованиеФайла	=	ПроверятьСуществование;
	
	Если ДиалогФыбораФайла.Выбрать() Тогда
		Объект.ИмяФайла = ДиалогФыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьМатериалы(Команда)
	
	ДокументХМЛ = новый ЧтениеXML;
	ДокументХМЛ.ОткрытьФайл(Объект.ИмяФайла);
	
	ДокументХМЛ.Прочитать();
	ДокументХДТО = ФабрикаXDTO.ПрочитатьXML(ДокументХМЛ);  
	
	СвойствоЭД = ДокументХДТО.Свойства().Получить("Материал");
	Если СвойствоЭД <> Неопределено Тогда
		Попытка
			для каждого стр из ДокументХДТО.Материал цикл	
				
				ТекДата = XMLЗначение(Тип("Дата"),стр.ДатаАкта);
				
				докСсылка = НайтиОПЗС_ПоДате(ТекДата);
				
				Если докСсылка = "" Тогда 
					Сообщить("Отчет за дату "+ТекДата+" не найден");
				иначе
					Если стр.Номенклатура="" Тогда 
						Продолжить;
					КонецЕсли;	
					ПараметрыСтроки = Новый Структура;
					ПараметрыСтроки.Вставить("Номер",докСсылка);
					ПараметрыСтроки.Вставить("ТекДата",ТекДата);
					ПараметрыСтроки.Вставить("НоменклатураДляБух",стр.НоменклатураДляБух);
					ПараметрыСтроки.Вставить("Номенклатура",стр.Номенклатура);
					ПараметрыСтроки.Вставить("Расход",стр.РасходМП);
					ЗаполнитьСтрокуМатериалов(ПараметрыСтроки); 
				КонецЕсли; 
				
			КонецЦикла;	
		Исключение
			ТекДата = XMLЗначение(Тип("Дата"),ДокументХДТО.Материал.ДатаАкта);
			
			докСсылка = НайтиОПЗС_ПоДате(ТекДата);
			
			Если докСсылка = "" Тогда 
				Сообщить("Отчет за дату "+ТекДата+" не найден");
			иначе
				ПараметрыСтроки = Новый Структура;
				ПараметрыСтроки.Вставить("Номер",докСсылка);
				ПараметрыСтроки.Вставить("ТекДата",ТекДата);
				ПараметрыСтроки.Вставить("НоменклатураДляБух",ДокументХДТО.Материал.НоменклатураДляБух);
				ПараметрыСтроки.Вставить("Номенклатура",ДокументХДТО.Материал.Номенклатура);
				ПараметрыСтроки.Вставить("Расход",ДокументХДТО.Материал.РасходМП);
				ЗаполнитьСтрокуМатериалов(ПараметрыСтроки); 
			КонецЕсли; 
			
		КонецПопытки;
	КонецЕсли;

	ДокументХМЛ.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура СоздатьОтчетПроизводства(Команда)
	СоздатьДокументыНаСервере();		
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Таблица1.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ)";

	Запрос.УстановитьПараметр("КонДата", КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("НачДата", ДатаНачала);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		новаяСтрока = Таблица1.Добавить();
		ЗаполнитьЗначенияСвойств(новаяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;

КонецПроцедуры	

&НаСервере
Процедура СоздатьДокументыНаСервере()
	//Найдем отчет на дату
	текДата = НачалоГода(текущаяДата());
	для Каждого стрТаб из Таблица1 цикл
		докСсылка = Неопределено;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетПроизводстваЗаСмену.Ссылка
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену КАК ОтчетПроизводстваЗаСмену
		|ГДЕ
		|	ОтчетПроизводстваЗаСмену.Дата МЕЖДУ &начДата И &конДата
		|	И ОтчетПроизводстваЗаСмену.ПометкаУдаления = ЛОЖЬ";
		
		Запрос.УстановитьПараметр("конДата", КонецДня(стрТаб.Дата));
		Запрос.УстановитьПараметр("начДата", НачалоДня(стрТаб.Дата));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда 
			новДок = документы.ОтчетПроизводстваЗаСмену.СоздатьДокумент();
			новДок.Дата = стрТаб.Дата;
			новДок.Ответственный = Справочники.Пользователи.НайтиПоНаименованию("Бухгалтер");
			новДок.ПодразделениеЗатрат = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Цех широкоформатной печати");
			новДок.Организация   = новДок.ПодразделениеЗатрат.ГоловнаяОрганизация;
			новДок.Склад  		 = Склад;
			новДок.СчетЗатрат    = ПланыСчетов.Хозрасчетный.НайтиПоКоду("20.01");
			новДок.Записать();
			докСсылка = новДок.Ссылка;
		иначе	
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				докСсылка =  ВыборкаДетальныеЗаписи.ссылка;
			КонецЦикла;	
		КонецЕсли;
		
		докОбъект = докСсылка.получитьОбъект();
		если докОбъект.Продукция.найти(стрТаб.номенклатура)= Неопределено Тогда  
			новСтрока = докОбъект.Продукция.Добавить();
			новСтрока.Номенклатура 	= стрТаб.номенклатура;
			новСтрока.Количество 		= стрТаб.количество;
			новСтрока.ПлановаяСтоимость	= 1;
			новСтрока.СуммаПлановая     = новСтрока.ПлановаяСтоимость*новСтрока.количество;
			новСтрока.Счет 				= ПланыСчетов.Хозрасчетный.НайтиПоКоду("43");
			новСтрока.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию("Оказание рекламных услуг");
			докОбъект.Записать();
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура СоздатьДокументыСФ(структура)
	ОснованиеНомер = ПреобразоватьНомер(структура.ОснованиеНомер,структура.префикс);
	ПоискРеализации = ПоискРеализацииПоНомеру(ОснованиеНомер,структура.ОснованиеДата);
	Основание = ПоискРеализации;
	СчетФактура = Документы.СчетФактураВыданный.СоздатьДокумент();
	Попытка
		СчетФактура.Заполнить(Основание);
		СчетФактура.НомерИсходногоДокумента = структура.НомерСчФ;
		СчетФактура.ДатаИсходногоДокумента = структура.ДатаСчФ;
		СчетФактура.Дата = Макс(структура.ДатаСчФ, Основание.Дата);
		Попытка
			СчетФактура.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	Исключение
	КонецПопытки;
КонецПроцедуры	

Функция ПреобразоватьНомер(Номер,префикс)
	
	БуфНомер 	= "";
	длПрефикса 	= СтрДлина(префикс); 
	буфНомер 	= Сред(Номер,длПрефикса+1);
	длНомера 	= СтрДлина(Номер);
	
	Если длНомера<11 Тогда 
		для к=1 по 11-(длНомера) Цикл 
			буфНомер = "0"+буфНомер;	
		КонецЦикла;	
	ИначеЕсли длНомера>11 Тогда //250221
		 буфНомер = Сред(БуфНомер,длНомера-12+длПрефикса);
	КонецЕсли;	
	буфНомер =  префикс+буфНомер;
	
	Возврат БуфНомер;
	
КонецФункции	
	