// @strict-types


Функция СведенияОВнешнейОбработке() Экспорт
    ПараметрыРегистрации = Новый Структура;
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
    //ПараметрыРегистрации.Вставить("Назначение", ...);

    ПараметрыРегистрации.Вставить("Наименование", "Выгрузка в бухгалтерию 3.0");
    ПараметрыРегистрации.Вставить("Версия", "2.1.3");
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
    ПараметрыРегистрации.Вставить("Информация", "Выгрузка в бухгалтерию 3.0");
    ПараметрыРегистрации.Вставить("ВерсияБСП", "1.2.1.4");
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    ДобавитьКоманду(ТаблицаКоманд,
    "Выгрузка в бухгалтерию 3.0",
    "1",
    "ОткрытиеФормы",
    Истина,""
    //<Модификатор>

    );
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()
    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
    Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

Процедура ВыгрузитьФайл() Экспорт 
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяФайла);
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Корневой");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетТовары.Номенклатура КАК Номенклатура,
	|	СчетТовары.Количество КАК Количество,
	|	СчетТовары.Цена КАК Цена,
	|	СчетТовары.Ссылка.Номер КАК Номер,
	|	СчетТовары.Ссылка.Дата КАК Дата,
	|	СчетТовары.Ссылка.Договор КАК Договор,
	|	СчетТовары.Ссылка.Контрагент КАК Контрагент,
	|	СчетТовары.Ссылка.Отвественный КАК Отвественный,
	|	СчетТовары.НомерСтроки КАК НомерСтроки,
	|	СчетТовары.КодЗаказа.Номер КАК КодЗаказа,
	|	СчетТовары.Сумма КАК Сумма,
	|	СчетТовары.СуммаНДС КАК СуммаНДС,
	|	СчетТовары.НДС КАК НДС,
	|	СчетТовары.Всего КАК Всего
	|ИЗ
	|	Документ.Счет.Товары КАК СчетТовары
	|ГДЕ
	|	СчетТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И СчетТовары.Ссылка.Дата МЕЖДУ &НачПериода И &КонПериода
	|	И СчетТовары.Ссылка.Организация = &Организация";
	
	Запрос.УстановитьПараметр("КонПериода", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("НачПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Организация", Организация);

	Результат = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
			
	ЗаписьXML.ЗаписатьКомментарий("Элементы документа счет:");	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("ЭлементыСчета");	
		ЗаписьXML.ЗаписатьАтрибут("Дата",XMLСтрока(ВыборкаДетальныеЗаписи.Дата));	
		ЗаписьXML.ЗаписатьАтрибут("Номер",XMLСтрока(ВыборкаДетальныеЗаписи.Номер));
		
		ЗаписьXML.ЗаписатьАтрибут("Контрагент",ВыборкаДетальныеЗаписи.Контрагент.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентИНН",ВыборкаДетальныеЗаписи.Контрагент.ИНН);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентКПП",ВыборкаДетальныеЗаписи.Контрагент.КПП);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентПолное",ВыборкаДетальныеЗаписи.Контрагент.НаименованиеПолное);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентАдрес",ВыборкаДетальныеЗаписи.Контрагент.ЮридическийАдрес);

		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Контрагент.НомерРасчетногоСчета) Тогда 
			ЗаписьXML.ЗаписатьАтрибут("НомерРС",ВыборкаДетальныеЗаписи.Контрагент.НомерРасчетногоСчета);
			ЗаписьXML.ЗаписатьАтрибут("БИК",ВыборкаДетальныеЗаписи.Контрагент.БИК);
			ЗаписьXML.ЗаписатьАтрибут("НаименованиеРС","Расчетный в "+ВыборкаДетальныеЗаписи.Контрагент.Банк);
		КонецЕсли;	
		
		ЗаписьXML.ЗаписатьАтрибут("Договор",ВыборкаДетальныеЗаписи.Договор.Наименование);		
		ЗаписьXML.ЗаписатьАтрибут("ОрганизацияИНН",Организация.ИНН);
		ЗаписьXML.ЗаписатьАтрибут("ОрганизацияПрефикс",Организация.Префикс);
		ЗаписьXML.ЗаписатьАтрибут("Ответственный",ВыборкаДетальныеЗаписи.Отвественный.Наименование);
		                                                                 
		ЗаписьXML.ЗаписатьАтрибут("ТоварНомерСтроки",Строка(ВыборкаДетальныеЗаписи.НомерСтроки));
		ЗаписьXML.ЗаписатьАтрибут("Номенклатура",XMLСтрока(ВыборкаДетальныеЗаписи.Номенклатура));
		ЗаписьXML.ЗаписатьАтрибут("ТоварНоменклатура",ВыборкаДетальныеЗаписи.Номенклатура.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("ТоварКоличество",Строка(ВыборкаДетальныеЗаписи.Количество));
		ЗаписьXML.ЗаписатьАтрибут("ТоварЦена",Строка(ВыборкаДетальныеЗаписи.Цена));
		ЗаписьXML.ЗаписатьАтрибут("ТоварСумма",Строка(ВыборкаДетальныеЗаписи.Сумма));
		ЗаписьXML.ЗаписатьАтрибут("ТоварСуммаНДС",Строка(ВыборкаДетальныеЗаписи.СуммаНДС));
		ЗаписьXML.ЗаписатьАтрибут("ТоварНДС",Строка(ВыборкаДетальныеЗаписи.НДС));
		ЗаписьXML.ЗаписатьАтрибут("ТоварВсего",Строка(ВыборкаДетальныеЗаписи.Всего));

		Попытка
			ЗаписьXML.ЗаписатьАтрибут("ТоварКодЗаказа",ВыборкаДетальныеЗаписи.КодЗаказа);
		Исключение
			ЗаписьXML.ЗаписатьАтрибут("ТоварКодЗаказа","");
		КонецПопытки;
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктТовары.Ссылка.Дата КАК ДатаАкта,
	|	АктТовары.Ссылка.Номер КАК НомерАкта,
	|	АктТовары.Номенклатура КАК НоменклатураАкта,
	|	АктТовары.Количество КАК КоличествоАкта,
	|	АктТовары.Цена КАК ЦенаАкта,
	|	АктТовары.Сумма КАК СуммаАкта,
	|	АктТовары.Ссылка.Основание.Номер КАК ОснованиеНомер,
	|	АктТовары.Ссылка.Контрагент КАК Контрагент,
	|	АктТовары.Ссылка.Договор КАК Договор,
	|	АктТовары.НомерСтроки КАК НомерСтроки,
	|	АктТовары.Ссылка КАК Акт,
	|	АктТовары.СуммаНДС КАК СуммаНДСАкт,
	|	АктТовары.НДС КАК НДСАкт,
	|	АктТовары.Всего КАК ВсегоАкта
	|ИЗ
	|	Документ.Акт.Товары КАК АктТовары
	|ГДЕ
	|	АктТовары.Ссылка.Дата МЕЖДУ &начДата И &конДата
	|	И АктТовары.Ссылка.Организация = &Организация
	|	И АктТовары.Ссылка.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("конДата", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("начДата", Период.ДатаНачала);
	
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	ЗаписьXML.ЗаписатьКомментарий("Элементы документа акт:");	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("ЭлементыАкта");
		ЗаписьXML.ЗаписатьАтрибут("ДатаАкта",XMLСтрока(ВыборкаДетальныеЗаписи.ДатаАкта));	
		ЗаписьXML.ЗаписатьАтрибут("НомерАкта",ВыборкаДетальныеЗаписи.НомерАкта);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентАкта",ВыборкаДетальныеЗаписи.Контрагент.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентАктаИНН",ВыборкаДетальныеЗаписи.Контрагент.ИНН);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентАктаКПП",ВыборкаДетальныеЗаписи.Контрагент.КПП);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентАктаПолное",ВыборкаДетальныеЗаписи.Контрагент.НаименованиеПолное);
		ЗаписьXML.ЗаписатьАтрибут("ОрганизацияИНН",Организация.ИНН);
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Контрагент.НомерРасчетногоСчета) Тогда 
			ЗаписьXML.ЗаписатьАтрибут("НомерРСАкта",ВыборкаДетальныеЗаписи.Контрагент.НомерРасчетногоСчета);
			ЗаписьXML.ЗаписатьАтрибут("БИКАкта",ВыборкаДетальныеЗаписи.Контрагент.БИК);
			ЗаписьXML.ЗаписатьАтрибут("НаименованиеРСАкта","Расчетный в "+ВыборкаДетальныеЗаписи.Контрагент.Банк);
		КонецЕсли;
		ЗаписьXML.ЗаписатьАтрибут("ДоговорКонтрагентаАкта",ВыборкаДетальныеЗаписи.Договор.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("НомерСтроки",Строка(ВыборкаДетальныеЗаписи.НомерСтроки));
		ЗаписьXML.ЗаписатьАтрибут("Номенклатура",XMLСтрока(ВыборкаДетальныеЗаписи.НоменклатураАкта));
		ЗаписьXML.ЗаписатьАтрибут("НоменклатураАкта",ВыборкаДетальныеЗаписи.НоменклатураАкта.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("КоличествоАкта",Строка(ВыборкаДетальныеЗаписи.КоличествоАкта));
		ЗаписьXML.ЗаписатьАтрибут("ЦенаАкта",Строка(ВыборкаДетальныеЗаписи.ЦенаАкта));
		ЗаписьXML.ЗаписатьАтрибут("СуммаАкта",Строка(ВыборкаДетальныеЗаписи.СуммаАкта));
		ЗаписьXML.ЗаписатьАтрибут("Основание",Строка(ВыборкаДетальныеЗаписи.ОснованиеНомер));
		ЗаписьXML.ЗаписатьАтрибут("СуммаНДСАкта",Строка(ВыборкаДетальныеЗаписи.СуммаНДСАкт));
		ЗаписьXML.ЗаписатьАтрибут("НДСАкта",Строка(ВыборкаДетальныеЗаписи.НДСАкт));
		ЗаписьXML.ЗаписатьАтрибут("ВсегоАкта",Строка(ВыборкаДетальныеЗаписи.ВсегоАкта));

		ЗаписьXML.ЗаписатьКонецЭлемента();	
		
		//Счет фактура выданный 
		Запрос_СФ = Новый Запрос;
		Запрос_СФ.Текст = 
		"ВЫБРАТЬ
		|	СчетФактураВыданный.Дата,
		|	СчетФактураВыданный.Номер
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|ГДЕ
		|	СчетФактураВыданный.Основание = &Основание";
		
		Запрос_СФ.УстановитьПараметр("Основание", ВыборкаДетальныеЗаписи.Акт);
		
		РезультатЗапроса_СФ = Запрос_СФ.Выполнить();
		
		Выборка_СФ = РезультатЗапроса_СФ.Выбрать();
		
		Пока Выборка_СФ.Следующий() Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("ЭлементыСчетФактура");
			ЗаписьXML.ЗаписатьАтрибут("ДатаСчетФактура",XMLСтрока(Выборка_СФ.Дата));	
			ЗаписьXML.ЗаписатьАтрибут("НомерСчетФактура",Выборка_СФ.Номер);	
			ЗаписьXML.ЗаписатьАтрибут("НомерОснования",ВыборкаДетальныеЗаписи.НомерАкта);	
			ЗаписьXML.ЗаписатьАтрибут("ДатаОснования",XMLСтрока(ВыборкаДетальныеЗаписи.ДатаАкта));	
			ЗаписьXML.ЗаписатьКонецЭлемента();	
		КонецЦикла;
		
	КонецЦикла;	

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугМатериалы.Ссылка,
	|	ПоступлениеТоваровУслугМатериалы.Количество,
	|	ПоступлениеТоваровУслугМатериалы.Цена,
	|	ПоступлениеТоваровУслугМатериалы.НДС,
	|	ПоступлениеТоваровУслугМатериалы.СуммаНДС,
	|	ПоступлениеТоваровУслугМатериалы.Сумма,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.Дата,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.ПолучательТовара.ИНН КАК Организация,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.Номер,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.Поставщик КАК Контрагент,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.Договор,
	|	ПоступлениеТоваровУслугМатериалы.Материал.НоменклатураБухгалтерии КАК Номенклатура,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.Ответственный КАК Ответственный,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.ВхДата КАК ДатаВходящегоДокумента,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.ВхНомер КАК НомерВходящегоДокумента,
	|	"""" КАК Грузополучатель,
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.Комментарий,
	|	ПоступлениеТоваровУслугМатериалы.НомерСтроки,
	|	"""" КАК Грузоотправитель
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугМатериалы
	|ГДЕ
	|	ПоступлениеТоваровУслугМатериалы.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ПоступлениеТоваровУслугМатериалы.Ссылка.Проведен = ИСТИНА
	|	И ПоступлениеТоваровУслугМатериалы.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И ПоступлениеТоваровУслугМатериалы.Ссылка.ПолучательТовара = &Организация";

	Запрос.УстановитьПараметр("конДата", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("начДата", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Организация", Организация);

	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("ЭлементПоступления");
		ЗаписьXML.ЗаписатьАтрибут("Дата",XMLСтрока(ВыборкаДетальныеЗаписи.Дата));	
		ЗаписьXML.ЗаписатьАтрибут("Номер",XMLСтрока(ВыборкаДетальныеЗаписи.Номер));
		ЗаписьXML.ЗаписатьАтрибут("Ссылка",XMLСтрока(ВыборкаДетальныеЗаписи.Ссылка));
		ЗаписьXML.ЗаписатьАтрибут("Организация",XMLСтрока(ВыборкаДетальныеЗаписи.Организация));
		
		ЗаписьXML.ЗаписатьАтрибут("Контрагент",ВыборкаДетальныеЗаписи.Контрагент.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентИНН",ВыборкаДетальныеЗаписи.Контрагент.ИНН);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентКПП",ВыборкаДетальныеЗаписи.Контрагент.КПП);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентПолное",ВыборкаДетальныеЗаписи.Контрагент.НаименованиеПолное);
		ЗаписьXML.ЗаписатьАтрибут("КонтрагентАдрес",ВыборкаДетальныеЗаписи.Контрагент.ЮридическийАдрес);
		ЗаписьXML.ЗаписатьАтрибут("ОрганизацияИНН",Организация.ИНН);
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Контрагент.НомерРасчетногоСчета) Тогда 
			ЗаписьXML.ЗаписатьАтрибут("НомерРС",ВыборкаДетальныеЗаписи.Контрагент.НомерРасчетногоСчета);
			ЗаписьXML.ЗаписатьАтрибут("БИК",ВыборкаДетальныеЗаписи.Контрагент.БИК);
			ЗаписьXML.ЗаписатьАтрибут("НаименованиеРС","Расчетный в "+ВыборкаДетальныеЗаписи.Контрагент.Банк);
		КонецЕсли;	
		
		ЗаписьXML.ЗаписатьАтрибут("Ответственный",ВыборкаДетальныеЗаписи.Ответственный.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("ДатаВходящегоДокумента",XMLСтрока(ВыборкаДетальныеЗаписи.ДатаВходящегоДокумента));	
		ЗаписьXML.ЗаписатьАтрибут("НомерВходящегоДокумента",ВыборкаДетальныеЗаписи.НомерВходящегоДокумента);
		ЗаписьXML.ЗаписатьАтрибут("Грузоотправитель",ВыборкаДетальныеЗаписи.Грузоотправитель);
		ЗаписьXML.ЗаписатьАтрибут("Грузополучатель",ВыборкаДетальныеЗаписи.Грузополучатель);
		ЗаписьXML.ЗаписатьАтрибут("Комментарий",ВыборкаДетальныеЗаписи.Комментарий);
		ЗаписьXML.ЗаписатьАтрибут("Договор",ВыборкаДетальныеЗаписи.Договор.Наименование);
		
		ЗаписьXML.ЗаписатьАтрибут("НомерСтроки",XMLСтрока(ВыборкаДетальныеЗаписи.НомерСтроки));
		ЗаписьXML.ЗаписатьАтрибут("Номенклатура",XMLСтрока(ВыборкаДетальныеЗаписи.Номенклатура));
		ЗаписьXML.ЗаписатьАтрибут("НоменклатураИмя",ВыборкаДетальныеЗаписи.Номенклатура.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("Количество",XMLСтрока(ВыборкаДетальныеЗаписи.Количество));
		ЗаписьXML.ЗаписатьАтрибут("Цена",XMLСтрока(ВыборкаДетальныеЗаписи.Цена));
		ЗаписьXML.ЗаписатьАтрибут("СтавкаНДС",XMLСтрока(ВыборкаДетальныеЗаписи.НДС));
		ЗаписьXML.ЗаписатьАтрибут("СуммаНДС",XMLСтрока(ВыборкаДетальныеЗаписи.СуммаНДС));
		ЗаписьXML.ЗаписатьАтрибут("Сумма",XMLСтрока(ВыборкаДетальныеЗаписи.Сумма));
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(РулоныОбороты.КоличествоРасход) КАК РасходМП,
	|	РулоныОбороты.Материал.НоменклатураБухгалтерии КАК НаименованиеДляБУ,
	|	НАЧАЛОПЕРИОДА(АктТовары.Ссылка.Дата, ДЕНЬ) КАК ДатаАкта,
	|	РулоныОбороты.Материал КАК Материал,
	|	АктТовары.Ссылка.Номер КАК НомерАкта,
	|	АктТовары.КодЗаказа КАК КодЗаказа
	|ИЗ
	|	РегистрНакопления.Рулоны.Обороты(, , Регистратор, ) КАК РулоныОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Акт.Товары КАК АктТовары
	|		ПО РулоныОбороты.Регистратор.Номер = АктТовары.КодЗаказа
	|ГДЕ
	|	РулоныОбороты.Регистратор ССЫЛКА Документ.НарядНаПроизводство
	|	И АктТовары.Ссылка.Проведен = ИСТИНА
	|	И АктТовары.Ссылка.Организация = &Организация
	|	И АктТовары.Ссылка.Дата МЕЖДУ &начДата И &конДата
	|
	|СГРУППИРОВАТЬ ПО
	|	РулоныОбороты.Материал.НоменклатураБухгалтерии,
	|	НАЧАЛОПЕРИОДА(АктТовары.Ссылка.Дата, ДЕНЬ),
	|	РулоныОбороты.Материал,
	|	АктТовары.Ссылка.Номер,
	|	АктТовары.КодЗаказа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(МатериалыОбороты.КоличествоРасход),
	|	МатериалыОбороты.Материал.НоменклатураБухгалтерии,
	|	НАЧАЛОПЕРИОДА(АктТовары.Ссылка.Дата, ДЕНЬ),
	|	МатериалыОбороты.Материал,
	|	АктТовары.Ссылка.Номер,
	|	АктТовары.КодЗаказа
	|ИЗ
	|	РегистрНакопления.Материалы.Обороты(, , Регистратор, ) КАК МатериалыОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Акт.Товары КАК АктТовары
	|		ПО МатериалыОбороты.Регистратор.Номер = АктТовары.КодЗаказа
	|ГДЕ
	|	МатериалыОбороты.Регистратор ССЫЛКА Документ.НарядНаПроизводство
	|	И АктТовары.Ссылка.Проведен = ИСТИНА
	|	И АктТовары.Ссылка.Организация = &Организация
	|	И АктТовары.Ссылка.Дата МЕЖДУ &начДата И &конДата
	|
	|СГРУППИРОВАТЬ ПО
	|	МатериалыОбороты.Материал.НоменклатураБухгалтерии,
	|	НАЧАЛОПЕРИОДА(АктТовары.Ссылка.Дата, ДЕНЬ),
	|	МатериалыОбороты.Материал,
	|	АктТовары.Ссылка.Номер,
	|	АктТовары.КодЗаказа";
		
	Запрос.УстановитьПараметр("конДата", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("начДата", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();	
	ТабРезультат =  Результат.Выгрузить();
	ТабРезультат.Свернуть("НаименованиеДляБУ,ДатаАкта","РасходМП");
	Для Каждого стрТЧ из ТабРезультат цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("Материал");
		ЗаписьXML.ЗаписатьАтрибут("ДатаАкта",XMLСтрока(стрТЧ.ДатаАкта));
		Если ЗначениеЗаполнено(стрТЧ.НаименованиеДляБУ) Тогда 
			ЗаписьXML.ЗаписатьАтрибут("НоменклатураДляБух",XMLСтрока(стрТЧ.НаименованиеДляБУ));
			ЗаписьXML.ЗаписатьАтрибут("Номенклатура",стрТЧ.НаименованиеДляБУ.Наименование);
		иначе
			ЗаписьXML.ЗаписатьАтрибут("НоменклатураДляБух","");
			ЗаписьXML.ЗаписатьАтрибут("Номенклатура","");
		КонецЕсли;
		РасходМП = стрТЧ.РасходМП;
		ЗаписьXML.ЗаписатьАтрибут("РасходМП",XMLСтрока(РасходМП));
		ЗаписьXML.ЗаписатьКонецЭлемента();	
	КонецЦикла;	
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.Закрыть();

	ПередатьНаFtp();

КонецПроцедуры	

Процедура ПередатьНаFtp()
	  Соединение = ПодключитьсяКFTPСерверу();
	  Соединение.УстановитьТекущийКаталог("/");
	  	Соединение.Записать(
       "C:\Obmen_Ra\MasterRa.xml", // что записываем
        "MasterRa.xml" // куда записываем
    );
КонецПроцедуры	

Функция ПодключитьсяКFTPСерверу()
 
    Соединение = Новый FTPСоединение(
        "172.168.196.10", // адрес ftp сервера
        21, // порт сервера
        "User05_1c", // имя пользователя
        "SrvUser051C", // пароль пользователя
        Неопределено, // прокси не используется
        Истина, // пассивный режим работы
        0, // таймаут (0 - без ограничений)
        Неопределено // незащищенное соединение
    );
 
    // Для случаев, когда у ftp сервера нет возможности
    // обращаться к нам (мы находимся за межсетевым экраном)
    // следует использовать пассивный режим работы.
 
    Возврат Соединение;
 
КонецФункции
