
&НаСервере
Процедура КомандаВыполнитьНаСервере()
	Для Каждого строкаТаблицы Из ТаблицаНарядов Цикл
		ДокументСсылка 	= строкаТаблицы.Наряд;
		
		Структура = ПолучитьДанныеДлятарифа(ДокументСсылка);	
		ТарифЦехаПоиск = ПолучитьТарифИзСправочника(Структура);
		
		Если Не ТарифЦехаПоиск = Справочники.ТарифыЦеха.ПустаяСсылка() Тогда
			ДокументОбъект 	= ДокументСсылка.ПолучитьОбъект();
			ДокументОбъект.ТарифЦеха1 = ТарифЦехаПоиск;
			ДокументОбъект.ТарифЦеха  = ТарифЦехаПоиск.Тариф;
			Попытка
				ДокументОбъект.Записать();
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	КомандаВыполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьНаСервере()
	ТаблицаНарядов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НарядНаПроизводство.Ссылка КАК Наряд,
		|	НарядНаПроизводство.ТарифЦеха1 КАК Тариф
		|ИЗ
		|	Документ.НарядНаПроизводство КАК НарядНаПроизводство
		|ГДЕ
		|	НарядНаПроизводство.Проведен
		|	И НарядНаПроизводство.ТарифЦеха1 = ЗНАЧЕНИЕ(Справочник.ТарифыЦеха.ПустаяСсылка)
		|	И НарядНаПроизводство.Дата > НАЧАЛОПЕРИОДА(&Дата, Год)";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ТаблицаНарядов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	КомандаЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДлятарифа(ДокументСсылка)
	
	Структура = ПолучитьСтруктуруРаботников();
	Структура.Вставить("ДокуменСсылка", ДокументСсылка);
	
	Структура = ПолучитьКоличествоТехниковПечатников(Структура);
	
	Структура.Вставить("ВидРабот"				, ДокументСсылка.ТехническоеЗадание.ВидРабот);
	Структура.Вставить("ПечатнаяМашина"			, ДокументСсылка.ТехническоеЗадание.ПечатнаяМашина);
	Структура.Вставить("ОбщаяПлощадьИзображения", ДокументСсылка.ТехническоеЗадание.ОбщаяПлощадьИзображения);
	
	Если ЗначениеЗаполнено(ДокументСсылка.ТехническоеЗадание.ОбщаяПлощадьИзображения) Тогда 
		 Структура.Вставить("СпособРасчетаТарифа"	, Перечисления.СпособыРасчетаТарифов.КвадратныйМетр);		
	Иначе
		 Структура.Вставить("СпособРасчетаТарифа"	, Перечисления.СпособыРасчетаТарифов.МетрПогонный);		
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

&НаСервере
Функция ПолучитьКоличествоТехниковПечатников(Структура)

	счПечатник 	= 0;
	счТехник   	= 0;
	Тариф 		= 0;

	Для Каждого стрТЧ Из Структура.ДокуменСсылка.СоставБригады Цикл
		Если стрТЧ.Статус = Перечисления.СтатусыРаботников.Печатник Тогда
			счПечатник = счПечатник + 1;
		ИначеЕсли стрТЧ.Статус = Перечисления.СтатусыРаботников.Техник Тогда
			счТехник = счТехник + 1;
		КонецЕсли;
		Если Тариф = 0 Тогда
			Тариф = стрТЧ.Тариф1;
		КонецЕсли;	
	КонецЦикла;

	Структура.Вставить("счПечатник"	, счПечатник);
	Структура.Вставить("счТехник"	, счТехник);
	Структура.Вставить("Тариф"		, Тариф);
	
	Возврат Структура;
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруРаботников()
	
	Структура = Новый Структура();
	Структура.Вставить("счПечатник", 0);
	Структура.Вставить("счПечатник", 0);
	
	Возврат Структура;
	
КонецФункции

&НаСервере
Функция ПолучитьТарифИзСправочника(Структура)
	
	СправочникТариф = Справочники.ТарифыЦеха.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТарифыЦеха.Ссылка,
		|	ТарифыЦеха.ДатаПрименения КАК ДатаПрименения
		|ИЗ
		|	Справочник.ТарифыЦеха КАК ТарифыЦеха
		|ГДЕ
		|	ТарифыЦеха.КолТехников = &КолТехников
		|	И ТарифыЦеха.КолПечатников = &КолПечатников
		|	И ТарифыЦеха.ВидРаботы = &ВидРаботы
		|	И ТарифыЦеха.ПечатнаяМашина = &ПечатнаяМашина
		|	И ТарифыЦеха.СпособРасчетаТарифа = &СпособРасчетаТарифа
		|	И ТарифыЦеха.Тариф = &Тариф
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаПрименения УБЫВ";
	
	Запрос.УстановитьПараметр("КолТехников"			, Структура.СчТехник);
	Запрос.УстановитьПараметр("ПечатнаяМашина"		, Структура.ПечатнаяМашина);
	Запрос.УстановитьПараметр("СпособРасчетаТарифа"	, Структура.СпособРасчетаТарифа);
	Запрос.УстановитьПараметр("КолПечатников"		, Структура.счПечатник);
	Запрос.УстановитьПараметр("ВидРаботы"			, Структура.ВидРабот);
	Запрос.УстановитьПараметр("Тариф"				, Структура.Тариф);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ТарифыЦеха.ВидРаботы = &ВидРаботы", "");
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ТарифыЦеха.ПечатнаяМашина = &ПечатнаяМашина", "");	
			РезультатЗапроса = Запрос.Выполнить();
		КонецЕсли;	
		
		Если РезультатЗапроса.Пустой() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Тариф не найден'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если РезультатЗапроса.Пустой() = Ложь	Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СправочникТариф = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СправочникТариф;
	
КонецФункции