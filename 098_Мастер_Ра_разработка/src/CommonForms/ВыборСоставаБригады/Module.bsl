// @strict-types

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьПечатника();
КонецПроцедуры

&НаСервере
Процедура УстановитьПечатника()
	Печатник = ОбщегоНазначения.НайтиСотрудникаПоПользователю(ПараметрыСеанса.ТекущийПользователь);	
КонецПроцедуры	

&НаКлиенте
Процедура ПечатникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучениеСписков.Печатников();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоставБригады()
	
	наборЗаписей = РегистрыСведений.СооставБригады.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.Период.Установить(ТекущаяДата());
	Запись = наборЗаписей.Добавить();
	Запись.Период 	= ТекущаяДата();
	Запись.Печатник = Печатник;
	Запись.Техник1  = Техник1;
	Запись.Техник2  = Техник2;
	Запись.Техник3  = Техник3;
	наборЗаписей.Записать();
	
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)	
	Отказ = Ложь;
	Если ЗначениеЗаполнено(Печатник)=Ложь И ЗначениеЗаполнено(Техник1)=Ложь И ЗначениеЗаполнено(Техник2)=Ложь И ЗначениеЗаполнено(Техник3)=Ложь Тогда 
		Отказ = Истина;
	КонецЕсли;	
	
	Если Отказ Тогда 		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле = "Печатник";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Текст = "Не заполнены поля";
		Сообщение.Сообщить();
	иначе
		 ЗаписатьСоставБригады();
	КонецЕсли;
КонецПроцедуры
