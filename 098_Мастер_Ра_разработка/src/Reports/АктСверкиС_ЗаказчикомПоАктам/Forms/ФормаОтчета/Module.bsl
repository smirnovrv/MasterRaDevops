// @strict-types


&НаКлиенте
Процедура Сформировать(Команда)
	
    СформироватьОтчетНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	КонтрагентПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	Структура = ПолучитьДанныеПредставителя(Контрагент);
	ДолжностьПредставителяКонтрагента 	= Структура.Должность;
	ПредставительКонтрагента 			= Структура.ФИО;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПредставителя(Контрагент)
	Структура = Новый Структура();
	Структура.Вставить("Должность","");
	Структура.Вставить("ФИО","");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Представители.Наименование КАК ФИО,
		|	Представители.Должность
		|ИЗ
		|	Справочник.Представители КАК Представители
		|ГДЕ
		|	Представители.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Структура.Вставить("Должность",ВыборкаДетальныеЗаписи.Должность.Наименование);
		Структура.Вставить("ФИО",ВыборкаДетальныеЗаписи.ФИО);
	КонецЦикла;
	
	Возврат Структура;
КонецФункции

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	ТабДокумент.Очистить();
	
	Макет =РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет1");
	
	ПараметрыЗаголовок = новый Структура;
	
	НазваниеОрганизации 	= Организация.Наименование; //изм. 04.02.20
	НаименованиеКонтрагента = Контрагент.НаименованиеПолное;
	 
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок"); 
	
	ЗаПериод = ПредставлениеПериода(НачалоДня(Период.ДатаНачала), КонецДня(Период.ДатаОкончания), "ФП = Истина");
	
	ПараметрыЗаголовок.Вставить("ЗаПериод", СтрШаблон(НСтр("ru='за период: %1'"), ЗаПериод));
	ПараметрыЗаголовок.Вставить("НазваниеОрганизации", НазваниеОрганизации);
	ПараметрыЗаголовок.Вставить("НаименованиеКонтрагента", НаименованиеКонтрагента);
	ПараметрыЗаголовок.Вставить("ПредставительКонтрагента", ПредставительКонтрагента);
	ПараметрыЗаголовок.Вставить("ПредставительОрганизации", ФИОПредставителя);
	ПараметрыЗаголовок.Вставить("ВалютаДокумента", "руб.");

	ОбластьЗаголовок.Параметры.Заполнить(ПараметрыЗаголовок);
	
	ТабДокумент.Вывести(ОбластьЗаголовок);
		
	ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ШапкаТаблицы);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыПоАктам.Остатки(
		|			&НачДата,
		|			Контрагент = &Контрагент
		|				И Организация = &Организация) КАК ВзаиморасчетыОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзаиморасчетыОбороты.Регистратор.Дата КАК РегистраторДата,
		|	ВзаиморасчетыОбороты.Регистратор.Номер,
		|	ВЫБОР
		|		КОГДА ВзаиморасчетыОбороты.Регистратор ССЫЛКА Документ.Акт
		|			ТОГДА ""Продажа""
		|		ИНАЧЕ ""Оплата""
		|	КОНЕЦ КАК ВидОперации,
		|	ВЫБОР
		|		КОГДА ВзаиморасчетыОбороты.Регистратор ССЫЛКА Документ.Акт
		|			ТОГДА ВзаиморасчетыОбороты.Регистратор.СуммаДокумента
		|		ИНАЧЕ ВзаиморасчетыОбороты.Регистратор.СуммаДокумента
		|	КОНЕЦ КАК Сумма,
		|	"""" КАК Описание
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыПоАктам.Обороты(
		|			&НачДата,
		|			&КонДата,
		|			Регистратор,
		|			Контрагент = &Контрагент
		|				И Организация = &Организация) КАК ВзаиморасчетыОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	РегистраторДата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзаиморасчетыОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыПоАктам.Остатки(
		|			&КонДата,
		|			Контрагент = &Контрагент
		|				И Организация = &Организация) КАК ВзаиморасчетыОстатки";
		
		Запрос.УстановитьПараметр("НачДата",Период.ДатаНачала);
		Запрос.УстановитьПараметр("КонДата",КонецДня(Период.ДатаОкончания));
		Запрос.УстановитьПараметр("Контрагент",Контрагент);
		Запрос.УстановитьПараметр("Организация",Организация);
		
		масРезультатов = Запрос.ВыполнитьПакет();
		
		//Сальдо Начальное		
		ВыборкаДетальныеЗаписи = масРезультатов[0].Выбрать();
		ОбластьНачОстатки = Макет.ПолучитьОбласть("НачОстатки");		
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ПараметрыНачальныеОстатки = Новый Структура;
			СуммаНачальныйОстаток =  ВыборкаДетальныеЗаписи.СуммаОстаток;
			ПараметрыНачальныеОстатки.Вставить("СуммаНачальныйОстатокДт", ?(СуммаНачальныйОстаток > 0, СуммаНачальныйОстаток, 0));
			ПараметрыНачальныеОстатки.Вставить("СуммаНачальныйОстатокКт", ?(СуммаНачальныйОстаток < 0, -СуммаНачальныйОстаток, 0));
			ОбластьНачОстатки.Параметры.Заполнить(ПараметрыНачальныеОстатки);					
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьНачОстатки);

		всегоДт = 0;
		всегоКт = 0;
		
		ВыборкаДетальныеЗаписи = масРезультатов[1].Выбрать();
		Обороты = Макет.ПолучитьОбласть("Обороты");
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Обороты.Параметры.Дата 		= ВыборкаДетальныеЗаписи.РегистраторДата;
			Обороты.Параметры.ДатаКонтр = ВыборкаДетальныеЗаписи.РегистраторДата;

			Если ВыборкаДетальныеЗаписи.ВидОперации="Продажа" Тогда 
				Обороты.Параметры.Представление 	= "Продажа ("+ВыборкаДетальныеЗаписи.РегистраторНомер+" от "+Формат(ВыборкаДетальныеЗаписи.РегистраторДата, "ДЛФ=Д")+")";
				Обороты.Параметры.ПредставлениеКонтр= "Продажа ("+ВыборкаДетальныеЗаписи.РегистраторНомер+" от "+Формат(ВыборкаДетальныеЗаписи.РегистраторДата, "ДЛФ=Д")+")";
				Обороты.Параметры.СуммаОборотДт = ВыборкаДетальныеЗаписи.Сумма; 
				Обороты.Параметры.СуммаОборотКт = "";
				Обороты.Параметры.СуммаОборотКтКонтр = ВыборкаДетальныеЗаписи.Сумма; 
				Обороты.Параметры.СуммаОборотДтКонтр = "";
				
				всегоДт = всегоДт+ ВыборкаДетальныеЗаписи.Сумма;
				
			иначе
				Обороты.Параметры.Представление 	= "Оплата ("+ВыборкаДетальныеЗаписи.РегистраторНомер+" от "+Формат(ВыборкаДетальныеЗаписи.РегистраторДата, "ДЛФ=Д")+")";
				Обороты.Параметры.ПредставлениеКонтр= "Оплата ("+ВыборкаДетальныеЗаписи.РегистраторНомер+" от "+Формат(ВыборкаДетальныеЗаписи.РегистраторДата, "ДЛФ=Д")+")";
				Обороты.Параметры.СуммаОборотКт = ВыборкаДетальныеЗаписи.Сумма;
				Обороты.Параметры.СуммаОборотДт = "";
				Обороты.Параметры.СуммаОборотДтКонтр = ВыборкаДетальныеЗаписи.Сумма; 
				Обороты.Параметры.СуммаОборотКтКонтр = "";
				всегоКт = всегоКт+ ВыборкаДетальныеЗаписи.Сумма;
			КонецЕсли;
			ТабДокумент.Вывести(Обороты);
		КонецЦикла;

		ОбИтог = Макет.ПолучитьОбласть("ОборотыИтог");
	    ОбИтог.Параметры.СуммаОборотДт = всегоДт;
	    ОбИтог.Параметры.СуммаОборотКт = всегоКт;
		ОбИтог.Параметры.СуммаОборотКтКонтр = всегоДт;
	    ОбИтог.Параметры.СуммаОборотДтКонтр = всегоКт;
		ТабДокумент.Вывести(ОбИтог);
		
		ВыборкаДетальныеЗаписи = масРезультатов[2].Выбрать();
		СальдоКонечное = Макет.ПолучитьОбласть("КонОстатки");
		
		ОстатокНаКонец = ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт + всегоДт - всегоКт - ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт;
		ОстатокНаКонецКонтр = ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт - всегоКт + всегоДт - ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт;
		
		ПараметрыИтогиПоКонтрагенту = Новый Структура;
		ПараметрыИтогиПоКонтрагенту.Вставить("СуммаКонечныйОстатокДт",      ?(ОстатокНаКонец > 0, ОстатокНаКонец, 0));
		ПараметрыИтогиПоКонтрагенту.Вставить("СуммаКонечныйОстатокКт",      ?(ОстатокНаКонец < 0, -ОстатокНаКонец, 0));
		ПараметрыИтогиПоКонтрагенту.Вставить("СуммаКонечныйОстатокКтКонтр", ?(ОстатокНаКонецКонтр > 0, ОстатокНаКонецКонтр, 0));
		ПараметрыИтогиПоКонтрагенту.Вставить("СуммаКонечныйОстатокДтКонтр", ?(ОстатокНаКонецКонтр < 0, -ОстатокНаКонецКонтр, 0));
		СальдоКонечное.Параметры.Заполнить(ПараметрыИтогиПоКонтрагенту);
		
		ТабДокумент.Вывести(СальдоКонечное);
			
		облПодвал = Макет.ПолучитьОбласть("Подвал");
			
		облПодвал.Параметры.НазваниеОрганизации 	= НазваниеОрганизации;
		облПодвал.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
		
		облПодвал.Параметры.РезультатыСверки = РезультатСверки(ОстатокНаКонец);
		облПодвал.Параметры.РезультатыСверки = РезультатСверки(ОстатокНаКонецКонтр);

		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";

		// Итог сверки выводим если нашли расхождение и сверка согласована.
		Если ОстатокНаКонец <> 0 Тогда
			СуммаРасхождение = ?(ОстатокНаКонец > 0, ОстатокНаКонец, -ОстатокНаКонец);
			ИтогСверки = СтрШаблон(НСтр("ru='В результате сверки выявлено расхождение информации о состоянии расчетов в размере %1 %2 %3'"),
				Формат(СуммаРасхождение, "ЧЦ=21; ЧДЦ=2"),
				"руб.",
				ЧислоПрописью(СуммаРасхождение, ФормСтрока, ПарПредмета));	
				облПодвал.Параметры.ИтогСверки = Символы.ПС + ИтогСверки + Символы.ПС + " ";
		КонецЕсли;
		
		облПодвал.Параметры.Должность  			= ДолжностьПредставителяОрганизации;
		облПодвал.Параметры.ДолжностьК 			= ДолжностьПредставителяКонтрагента;
		облПодвал.Параметры.ФИОПредставителя  	= ФИОПредставителя;
		облПодвал.Параметры.ФИОПредставителяК 	= ПредставительКонтрагента;
		
		ТабДокумент.Вывести(облПодвал);
	     
КонецПроцедуры
	
Функция ВставитьПараметрыВСтроку(Знач ШаблонСтроки, Знач Параметры)
	Результат = ШаблонСтроки;
	Для Каждого Параметр Из Параметры Цикл
		Результат = СтрЗаменить(Результат, "[" + Параметр.Ключ + "]", Параметр.Значение);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция РезультатСверки(ОстатокНаКонец)
	
	ШаблонРезультатСверки = НСтр("ru='на [ДатаСверки] задолженность [Заключение].'");
	ПараметрыИтогСверки = Новый Структура;
	ПараметрыИтогСверки.Вставить("ДатаСверки", Формат(Период.ДатаОкончания, "ДЛФ=D"));
	ПараметрыИтогСверки.Вставить("Заключение", НСтр("ru='отсутствует'"));
	
	Если ОстатокНаКонец <> 0 Тогда
		ШаблонЗаключение = НСтр("ru='в пользу [Представитель] [СуммаЦифрами] [Валюта] ([СуммаПрописью])'");
		ПараметрыЗаключение = Новый Структура("Представитель, СуммаЦифрами, Валюта, СуммаПрописью");
		ПараметрыЗаключение.Валюта = "руб.";
		Если ОстатокНаКонец > 0 Тогда
			ПараметрыЗаключение.Представитель = Организация;
			Множитель = 1;
		Иначе
			ПараметрыЗаключение.Представитель = Контрагент;
			Множитель = -1;
		КонецЕсли;
		
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
		ПрописьЧисла = ЧислоПрописью(Множитель*ОстатокНаКонец, ФормСтрока, ПарПредмета);	
		
		ПараметрыЗаключение.СуммаЦифрами = Формат(Множитель * ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2");
		ПараметрыЗаключение.СуммаПрописью = ПрописьЧисла;
		
		ПараметрыИтогСверки.Заключение = ВставитьПараметрыВСтроку(ШаблонЗаключение, ПараметрыЗаключение);
	КонецЕсли;
	
	возврат ВставитьПараметрыВСтроку(ШаблонРезультатСверки, ПараметрыИтогСверки);
	
КонецФункции	

//Функция ЕстьАкт(КодЗаказа)
//
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	АктТовары.Ссылка
//		|ИЗ
//		|	Документ.Акт.Товары КАК АктТовары
//		|ГДЕ
//		|	АктТовары.КодЗаказа = &КодЗаказа";
//	
//	Запрос.УстановитьПараметр("КодЗаказа", КодЗаказа);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	Возврат Не РезультатЗапроса.Пустой();
//
//КонецФункции // ЕстьАкт()
